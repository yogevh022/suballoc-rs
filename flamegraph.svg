<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="1691"><g><title>`0x7FFCD82DCC70 (1 samples, 0.06%)</title><rect x="0.0000%" y="501" width="0.0591%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>`0x7FFCD82DD407 (1 samples, 0.06%)</title><rect x="0.0591%" y="469" width="0.0591%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3091%" y="479.50"></text></g><g><title>`0x7FFCD8330F84 (1 samples, 0.06%)</title><rect x="0.0591%" y="453" width="0.0591%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3091%" y="463.50"></text></g><g><title>`0x7FFCD82F0128 (2 samples, 0.12%)</title><rect x="0.1183%" y="421" width="0.1183%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.3683%" y="431.50"></text></g><g><title>`0x7FFCD82C26C6 (2 samples, 0.12%)</title><rect x="0.1183%" y="405" width="0.1183%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="2"/><text x="0.3683%" y="415.50"></text></g><g><title>`0x7FFCD82DD79A (3 samples, 0.18%)</title><rect x="0.1183%" y="469" width="0.1774%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="3"/><text x="0.3683%" y="479.50"></text></g><g><title>`0x7FFCD82F3720 (3 samples, 0.18%)</title><rect x="0.1183%" y="453" width="0.1774%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="3"/><text x="0.3683%" y="463.50"></text></g><g><title>`0x7FFCD82F00D3 (3 samples, 0.18%)</title><rect x="0.1183%" y="437" width="0.1774%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="3"/><text x="0.3683%" y="447.50"></text></g><g><title>`0x7FFCD82F0160 (1 samples, 0.06%)</title><rect x="0.2365%" y="421" width="0.0591%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="1"/><text x="0.4865%" y="431.50"></text></g><g><title>`0x7FFCD82F0BD6 (1 samples, 0.06%)</title><rect x="0.2365%" y="405" width="0.0591%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="1"/><text x="0.4865%" y="415.50"></text></g><g><title>`0x7FFCD82F0516 (1 samples, 0.06%)</title><rect x="0.2365%" y="389" width="0.0591%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="1"/><text x="0.4865%" y="399.50"></text></g><g><title>`0x7FFCD82F06F7 (1 samples, 0.06%)</title><rect x="0.2365%" y="373" width="0.0591%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="0.4865%" y="383.50"></text></g><g><title>`0x7FFCD82F086B (1 samples, 0.06%)</title><rect x="0.2365%" y="357" width="0.0591%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.4865%" y="367.50"></text></g><g><title>`0x7FFCD832DC94 (1 samples, 0.06%)</title><rect x="0.2365%" y="341" width="0.0591%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.4865%" y="351.50"></text></g><g><title>`0x7FFCD5E119A9 (1 samples, 0.06%)</title><rect x="0.2957%" y="421" width="0.0591%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.5457%" y="431.50"></text></g><g><title>`0x7FFCD6038115 (1 samples, 0.06%)</title><rect x="0.2957%" y="405" width="0.0591%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.5457%" y="415.50"></text></g><g><title>`0x7FFCD6038168 (1 samples, 0.06%)</title><rect x="0.2957%" y="389" width="0.0591%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.5457%" y="399.50"></text></g><g><title>`0x7FFCD603580E (1 samples, 0.06%)</title><rect x="0.2957%" y="373" width="0.0591%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.5457%" y="383.50"></text></g><g><title>`0x7FFCD82FAB0C (1 samples, 0.06%)</title><rect x="0.2957%" y="357" width="0.0591%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.5457%" y="367.50"></text></g><g><title>`0x7FFCD82FACD6 (1 samples, 0.06%)</title><rect x="0.2957%" y="341" width="0.0591%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.5457%" y="351.50"></text></g><g><title>`0x7FFCD8330044 (1 samples, 0.06%)</title><rect x="0.2957%" y="325" width="0.0591%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="0.5457%" y="335.50"></text></g><g><title>`0x7FFCD82F0F02 (1 samples, 0.06%)</title><rect x="0.3548%" y="309" width="0.0591%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.6048%" y="319.50"></text></g><g><title>`0x7FFCD82F06F7 (1 samples, 0.06%)</title><rect x="0.3548%" y="293" width="0.0591%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.6048%" y="303.50"></text></g><g><title>`0x7FFCD82F086B (1 samples, 0.06%)</title><rect x="0.3548%" y="277" width="0.0591%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.6048%" y="287.50"></text></g><g><title>`0x7FFCD832DC94 (1 samples, 0.06%)</title><rect x="0.3548%" y="261" width="0.0591%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.6048%" y="271.50"></text></g><g><title>`0x7FFCD82F118C (1 samples, 0.06%)</title><rect x="0.4140%" y="293" width="0.0591%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.6640%" y="303.50"></text></g><g><title>`0x7FFCD832DB54 (1 samples, 0.06%)</title><rect x="0.4140%" y="277" width="0.0591%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.6640%" y="287.50"></text></g><g><title>`0x7FFCD82A7A0E (1 samples, 0.06%)</title><rect x="0.4731%" y="261" width="0.0591%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="0.7231%" y="271.50"></text></g><g><title>`0x7FFCD82A7B29 (1 samples, 0.06%)</title><rect x="0.5322%" y="261" width="0.0591%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="0.7822%" y="271.50"></text></g><g><title>`0x7FFCD82A88A8 (1 samples, 0.06%)</title><rect x="0.5322%" y="245" width="0.0591%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="0.7822%" y="255.50"></text></g><g><title>`0x7FFCD82A4479 (1 samples, 0.06%)</title><rect x="0.5322%" y="229" width="0.0591%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="0.7822%" y="239.50"></text></g><g><title>`0x7FFCD82A4AAA (1 samples, 0.06%)</title><rect x="0.5322%" y="213" width="0.0591%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="0.7822%" y="223.50"></text></g><g><title>`0x7FFCD82A4D42 (1 samples, 0.06%)</title><rect x="0.5322%" y="197" width="0.0591%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="0.7822%" y="207.50"></text></g><g><title>`0x7FFCD832D9F4 (1 samples, 0.06%)</title><rect x="0.5322%" y="181" width="0.0591%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="0.7822%" y="191.50"></text></g><g><title>`0x7FFCD82AFB53 (5 samples, 0.30%)</title><rect x="0.3548%" y="341" width="0.2957%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="5"/><text x="0.6048%" y="351.50"></text></g><g><title>`0x7FFCD82F020F (5 samples, 0.30%)</title><rect x="0.3548%" y="325" width="0.2957%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="5"/><text x="0.6048%" y="335.50"></text></g><g><title>`0x7FFCD82F0F70 (4 samples, 0.24%)</title><rect x="0.4140%" y="309" width="0.2365%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="4"/><text x="0.6640%" y="319.50"></text></g><g><title>`0x7FFCD82F1243 (3 samples, 0.18%)</title><rect x="0.4731%" y="293" width="0.1774%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="3"/><text x="0.7231%" y="303.50"></text></g><g><title>`0x7FFCD82A4C14 (3 samples, 0.18%)</title><rect x="0.4731%" y="277" width="0.1774%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="3"/><text x="0.7231%" y="287.50"></text></g><g><title>`0x7FFCD82A7BC4 (1 samples, 0.06%)</title><rect x="0.5914%" y="261" width="0.0591%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="0.8414%" y="271.50"></text></g><g><title>`0x7FFCD82C2736 (1 samples, 0.06%)</title><rect x="0.5914%" y="245" width="0.0591%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="1"/><text x="0.8414%" y="255.50"></text></g><g><title>`0x7FFCD5E1045F (7 samples, 0.41%)</title><rect x="0.2957%" y="453" width="0.4140%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="7"/><text x="0.5457%" y="463.50"></text></g><g><title>`0x7FFCD5E105A2 (7 samples, 0.41%)</title><rect x="0.2957%" y="437" width="0.4140%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="7"/><text x="0.5457%" y="447.50"></text></g><g><title>`0x7FFCD5E119C7 (6 samples, 0.35%)</title><rect x="0.3548%" y="421" width="0.3548%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="6"/><text x="0.6048%" y="431.50"></text></g><g><title>`0x7FFCD5E0C050 (6 samples, 0.35%)</title><rect x="0.3548%" y="405" width="0.3548%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="6"/><text x="0.6048%" y="415.50"></text></g><g><title>`0x7FFCD5FEDB72 (6 samples, 0.35%)</title><rect x="0.3548%" y="389" width="0.3548%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="6"/><text x="0.6048%" y="399.50"></text></g><g><title>`0x7FFCD82A6AF4 (6 samples, 0.35%)</title><rect x="0.3548%" y="373" width="0.3548%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="6"/><text x="0.6048%" y="383.50"></text></g><g><title>`0x7FFCD82A73E4 (6 samples, 0.35%)</title><rect x="0.3548%" y="357" width="0.3548%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="6"/><text x="0.6048%" y="367.50"></text></g><g><title>`0x7FFCD82AFBAE (1 samples, 0.06%)</title><rect x="0.6505%" y="341" width="0.0591%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="0.9005%" y="351.50"></text></g><g><title>`0x7FFCD82CD947 (1 samples, 0.06%)</title><rect x="0.6505%" y="325" width="0.0591%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="1"/><text x="0.9005%" y="335.50"></text></g><g><title>`0x7FFCD82FD110 (1 samples, 0.06%)</title><rect x="0.6505%" y="309" width="0.0591%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="1"/><text x="0.9005%" y="319.50"></text></g><g><title>`0x7FFCD82FD08A (1 samples, 0.06%)</title><rect x="0.6505%" y="293" width="0.0591%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="0.9005%" y="303.50"></text></g><g><title>`0x7FFCD82FD2F7 (1 samples, 0.06%)</title><rect x="0.6505%" y="277" width="0.0591%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="0.9005%" y="287.50"></text></g><g><title>`0x7FFCD82A9A1D (1 samples, 0.06%)</title><rect x="0.6505%" y="261" width="0.0591%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="0.9005%" y="271.50"></text></g><g><title>`0x7FFCD68578A7 (1 samples, 0.06%)</title><rect x="0.6505%" y="245" width="0.0591%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="0.9005%" y="255.50"></text></g><g><title>`0x7FFCD6857BA3 (1 samples, 0.06%)</title><rect x="0.6505%" y="229" width="0.0591%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="1"/><text x="0.9005%" y="239.50"></text></g><g><title>`0x7FFCD6869798 (1 samples, 0.06%)</title><rect x="0.6505%" y="213" width="0.0591%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="1"/><text x="0.9005%" y="223.50"></text></g><g><title>`0x7FFCD6030EB8 (1 samples, 0.06%)</title><rect x="0.6505%" y="197" width="0.0591%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="1"/><text x="0.9005%" y="207.50"></text></g><g><title>`0x7FFCD829AD5B (1 samples, 0.06%)</title><rect x="0.6505%" y="181" width="0.0591%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="1"/><text x="0.9005%" y="191.50"></text></g><g><title>suballoc.exe`std::io::stdio::_print (1 samples, 0.06%)</title><rect x="0.7096%" y="389" width="0.0591%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="1"/><text x="0.9596%" y="399.50"></text></g><g><title>suballoc.exe`std::io::stdio::print_to (1 samples, 0.06%)</title><rect x="0.7096%" y="373" width="0.0591%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="0.9596%" y="383.50"></text></g><g><title>suballoc.exe`std::io::stdio::impl$15::write_fmt (1 samples, 0.06%)</title><rect x="0.7096%" y="357" width="0.0591%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="0.9596%" y="367.50"></text></g><g><title>suballoc.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.06%)</title><rect x="0.7096%" y="341" width="0.0591%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="0.9596%" y="351.50"></text></g><g><title>suballoc.exe`std::io::Write::write_fmt (1 samples, 0.06%)</title><rect x="0.7096%" y="325" width="0.0591%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="0.9596%" y="335.50"></text></g><g><title>suballoc.exe`std::io::default_write_fmt (1 samples, 0.06%)</title><rect x="0.7096%" y="309" width="0.0591%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="0.9596%" y="319.50"></text></g><g><title>suballoc.exe`core::fmt::write (1 samples, 0.06%)</title><rect x="0.7096%" y="293" width="0.0591%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="0.9596%" y="303.50"></text></g><g><title>suballoc.exe`core::time::impl$12::fmt (1 samples, 0.06%)</title><rect x="0.7096%" y="277" width="0.0591%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="0.9596%" y="287.50"></text></g><g><title>suballoc.exe`core::time::impl$12::fmt::fmt_decimal (1 samples, 0.06%)</title><rect x="0.7096%" y="261" width="0.0591%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="0.9596%" y="271.50"></text></g><g><title>suballoc.exe`core::time::impl$12::fmt::fmt_decimal::closure$1 (1 samples, 0.06%)</title><rect x="0.7096%" y="245" width="0.0591%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="0.9596%" y="255.50"></text></g><g><title>suballoc.exe`core::fmt::Formatter::write_fmt (1 samples, 0.06%)</title><rect x="0.7096%" y="229" width="0.0591%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="0.9596%" y="239.50"></text></g><g><title>suballoc.exe`core::fmt::write (1 samples, 0.06%)</title><rect x="0.7096%" y="213" width="0.0591%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="0.9596%" y="223.50"></text></g><g><title>suballoc.exe`core::fmt::Formatter::pad (1 samples, 0.06%)</title><rect x="0.7096%" y="197" width="0.0591%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="0.9596%" y="207.50"></text></g><g><title>suballoc.exe`core::str::iter::impl$0::count (1 samples, 0.06%)</title><rect x="0.7096%" y="181" width="0.0591%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="0.9596%" y="191.50"></text></g><g><title>suballoc.exe`core::str::count::count_chars (1 samples, 0.06%)</title><rect x="0.7096%" y="165" width="0.0591%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="0.9596%" y="175.50"></text></g><g><title>suballoc.exe`core::str::count::char_count_general_case (1 samples, 0.06%)</title><rect x="0.7096%" y="149" width="0.0591%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="0.9596%" y="159.50"></text></g><g><title>suballoc.exe`core::iter::adapters::filter::impl$3::count (1 samples, 0.06%)</title><rect x="0.7096%" y="133" width="0.0591%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="0.9596%" y="143.50"></text></g><g><title>suballoc.exe`core::iter::traits::iterator::Iterator::sum (1 samples, 0.06%)</title><rect x="0.7096%" y="117" width="0.0591%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="0.9596%" y="127.50"></text></g><g><title>suballoc.exe`core::iter::traits::accum::impl$48::sum (1 samples, 0.06%)</title><rect x="0.7096%" y="101" width="0.0591%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="0.9596%" y="111.50"></text></g><g><title>suballoc.exe`core::iter::adapters::map::impl$2::fold (1 samples, 0.06%)</title><rect x="0.7096%" y="85" width="0.0591%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="0.9596%" y="95.50"></text></g><g><title>suballoc.exe`core::slice::iter::impl$183::fold (1 samples, 0.06%)</title><rect x="0.7096%" y="69" width="0.0591%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="0.9596%" y="79.50"></text></g><g><title>suballoc.exe`core::iter::adapters::map::map_fold::closure$0 (1 samples, 0.06%)</title><rect x="0.7096%" y="53" width="0.0591%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="0.9596%" y="63.50"></text></g><g><title>suballoc.exe`core::iter::adapters::filter::impl$3::count::to_usize::closure$0 (1 samples, 0.06%)</title><rect x="0.7096%" y="37" width="0.0591%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="0.9596%" y="47.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (10 samples, 0.59%)</title><rect x="3.7256%" y="373" width="0.5914%" height="15" fill="rgb(211,81,21)" fg:x="63" fg:w="10"/><text x="3.9756%" y="383.50"></text></g><g><title>suballoc.exe`core::ptr::write (4 samples, 0.24%)</title><rect x="4.0804%" y="357" width="0.2365%" height="15" fill="rgb(208,190,38)" fg:x="69" fg:w="4"/><text x="4.3304%" y="367.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::set_len (4 samples, 0.24%)</title><rect x="4.6718%" y="357" width="0.2365%" height="15" fill="rgb(235,213,38)" fg:x="79" fg:w="4"/><text x="4.9218%" y="367.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::swap_remove (43 samples, 2.54%)</title><rect x="4.3170%" y="373" width="2.5429%" height="15" fill="rgb(237,122,38)" fg:x="73" fg:w="43"/><text x="4.5670%" y="383.50">su..</text></g><g><title>suballoc.exe`core::ptr::copy (33 samples, 1.95%)</title><rect x="4.9083%" y="357" width="1.9515%" height="15" fill="rgb(244,218,35)" fg:x="83" fg:w="33"/><text x="5.1583%" y="367.50">s..</text></g><g><title>suballoc.exe`core::iter::range::impl$6::next(core::ops::range::Range (9 samples, 0.53%)</title><rect x="6.8598%" y="373" width="0.5322%" height="15" fill="rgb(240,68,47)" fg:x="116" fg:w="9"/><text x="7.1098%" y="383.50"></text></g><g><title>suballoc.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (9 samples, 0.53%)</title><rect x="6.8598%" y="357" width="0.5322%" height="15" fill="rgb(210,16,53)" fg:x="116" fg:w="9"/><text x="7.1098%" y="367.50"></text></g><g><title>suballoc.exe`core::cmp::impls::impl$58::lt (4 samples, 0.24%)</title><rect x="7.1555%" y="341" width="0.2365%" height="15" fill="rgb(235,124,12)" fg:x="121" fg:w="4"/><text x="7.4055%" y="351.50"></text></g><g><title>`0x7FFCD5946875 (1 samples, 0.06%)</title><rect x="9.4027%" y="133" width="0.0591%" height="15" fill="rgb(224,169,11)" fg:x="159" fg:w="1"/><text x="9.6527%" y="143.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt;::reseed_and_generate&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; (2 samples, 0.12%)</title><rect x="9.4027%" y="229" width="0.1183%" height="15" fill="rgb(250,166,2)" fg:x="159" fg:w="2"/><text x="9.6527%" y="239.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt;::reseed (2 samples, 0.12%)</title><rect x="9.4027%" y="213" width="0.1183%" height="15" fill="rgb(242,216,29)" fg:x="159" fg:w="2"/><text x="9.6527%" y="223.50"></text></g><g><title>suballoc.exe`rand_core::SeedableRng::try_from_rng (2 samples, 0.12%)</title><rect x="9.4027%" y="197" width="0.1183%" height="15" fill="rgb(230,116,27)" fg:x="159" fg:w="2"/><text x="9.6527%" y="207.50"></text></g><g><title>`0x7FFCD594513C (2 samples, 0.12%)</title><rect x="9.4027%" y="181" width="0.1183%" height="15" fill="rgb(228,99,48)" fg:x="159" fg:w="2"/><text x="9.6527%" y="191.50"></text></g><g><title>`0x7FFCD59453DF (2 samples, 0.12%)</title><rect x="9.4027%" y="165" width="0.1183%" height="15" fill="rgb(253,11,6)" fg:x="159" fg:w="2"/><text x="9.6527%" y="175.50"></text></g><g><title>`0x7FFCD5946849 (2 samples, 0.12%)</title><rect x="9.4027%" y="149" width="0.1183%" height="15" fill="rgb(247,143,39)" fg:x="159" fg:w="2"/><text x="9.6527%" y="159.50"></text></g><g><title>`0x7FFCD594690A (1 samples, 0.06%)</title><rect x="9.4619%" y="133" width="0.0591%" height="15" fill="rgb(236,97,10)" fg:x="160" fg:w="1"/><text x="9.7119%" y="143.50"></text></g><g><title>`0x7FFCD5946BD8 (1 samples, 0.06%)</title><rect x="9.4619%" y="117" width="0.0591%" height="15" fill="rgb(233,208,19)" fg:x="160" fg:w="1"/><text x="9.7119%" y="127.50"></text></g><g><title>suballoc.exe`chacha20::ChaChaCore&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::generate&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt; (11 samples, 0.65%)</title><rect x="10.0532%" y="197" width="0.6505%" height="15" fill="rgb(216,164,2)" fg:x="170" fg:w="11"/><text x="10.3032%" y="207.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi32 (35 samples, 2.07%)</title><rect x="10.9994%" y="117" width="2.0698%" height="15" fill="rgb(220,129,5)" fg:x="186" fg:w="35"/><text x="11.2494%" y="127.50">s..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_shuffle_epi8 (28 samples, 1.66%)</title><rect x="13.0692%" y="117" width="1.6558%" height="15" fill="rgb(242,17,10)" fg:x="221" fg:w="28"/><text x="13.3192%" y="127.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_slli_epi32 (59 samples, 3.49%)</title><rect x="14.7250%" y="117" width="3.4891%" height="15" fill="rgb(242,107,0)" fg:x="249" fg:w="59"/><text x="14.9750%" y="127.50">sub..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::add_xor_rot (123 samples, 7.27%)</title><rect x="10.9994%" y="133" width="7.2738%" height="15" fill="rgb(251,28,31)" fg:x="186" fg:w="123"/><text x="11.2494%" y="143.50">suballoc.e..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.06%)</title><rect x="18.2141%" y="117" width="0.0591%" height="15" fill="rgb(233,223,10)" fg:x="308" fg:w="1"/><text x="18.4641%" y="127.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::cols_to_rows (1 samples, 0.06%)</title><rect x="18.2732%" y="133" width="0.0591%" height="15" fill="rgb(215,21,27)" fg:x="309" fg:w="1"/><text x="18.5232%" y="143.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.06%)</title><rect x="18.2732%" y="117" width="0.0591%" height="15" fill="rgb(232,23,21)" fg:x="309" fg:w="1"/><text x="18.5232%" y="127.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::double_quarter_round (127 samples, 7.51%)</title><rect x="10.9994%" y="149" width="7.5103%" height="15" fill="rgb(244,5,23)" fg:x="186" fg:w="127"/><text x="11.2494%" y="159.50">suballoc.e..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::rows_to_cols (3 samples, 0.18%)</title><rect x="18.3323%" y="133" width="0.1774%" height="15" fill="rgb(226,81,46)" fg:x="310" fg:w="3"/><text x="18.5823%" y="143.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.18%)</title><rect x="18.3323%" y="117" width="0.1774%" height="15" fill="rgb(247,70,30)" fg:x="310" fg:w="3"/><text x="18.5823%" y="127.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::rounds (128 samples, 7.57%)</title><rect x="10.9994%" y="165" width="7.5695%" height="15" fill="rgb(212,68,19)" fg:x="186" fg:w="128"/><text x="11.2494%" y="175.50">suballoc.e..</text></g><g><title>suballoc.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.06%)</title><rect x="18.5098%" y="149" width="0.0591%" height="15" fill="rgb(240,187,13)" fg:x="313" fg:w="1"/><text x="18.7598%" y="159.50"></text></g><g><title>suballoc.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.06%)</title><rect x="18.5098%" y="133" width="0.0591%" height="15" fill="rgb(223,113,26)" fg:x="313" fg:w="1"/><text x="18.7598%" y="143.50"></text></g><g><title>suballoc.exe`core::cmp::impls::impl$58::lt (1 samples, 0.06%)</title><rect x="18.5098%" y="117" width="0.0591%" height="15" fill="rgb(206,192,2)" fg:x="313" fg:w="1"/><text x="18.7598%" y="127.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::Backend&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::rng_gen_par_ks_blocks (132 samples, 7.81%)</title><rect x="10.9994%" y="181" width="7.8060%" height="15" fill="rgb(241,108,4)" fg:x="186" fg:w="132"/><text x="11.2494%" y="191.50">suballoc.ex..</text></g><g><title>suballoc.exe`core::core_arch::x86::sse2::_mm_storeu_si128 (4 samples, 0.24%)</title><rect x="18.5689%" y="165" width="0.2365%" height="15" fill="rgb(247,173,49)" fg:x="314" fg:w="4"/><text x="18.8189%" y="175.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::write_unaligned (4 samples, 0.24%)</title><rect x="18.5689%" y="149" width="0.2365%" height="15" fill="rgb(224,114,35)" fg:x="314" fg:w="4"/><text x="18.8189%" y="159.50"></text></g><g><title>suballoc.exe`core::ptr::write_unaligned (4 samples, 0.24%)</title><rect x="18.5689%" y="133" width="0.2365%" height="15" fill="rgb(245,159,27)" fg:x="314" fg:w="4"/><text x="18.8189%" y="143.50"></text></g><g><title>suballoc.exe`core::ptr::copy_nonoverlapping (4 samples, 0.24%)</title><rect x="18.5689%" y="117" width="0.2365%" height="15" fill="rgb(245,172,44)" fg:x="314" fg:w="4"/><text x="18.8189%" y="127.50"></text></g><g><title>suballoc.exe`rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; &gt;::generate_and_set (162 samples, 9.58%)</title><rect x="9.4027%" y="245" width="9.5801%" height="15" fill="rgb(236,23,11)" fg:x="159" fg:w="162"/><text x="9.6527%" y="255.50">suballoc.exe`r..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$4::generate(rand::rngs::reseeding::ReseedingCore (160 samples, 9.46%)</title><rect x="9.5210%" y="229" width="9.4619%" height="15" fill="rgb(205,117,38)" fg:x="161" fg:w="160"/><text x="9.7710%" y="239.50">suballoc.exe`r..</text></g><g><title>suballoc.exe`chacha20::rng::impl$42::generate (151 samples, 8.93%)</title><rect x="10.0532%" y="213" width="8.9296%" height="15" fill="rgb(237,72,25)" fg:x="170" fg:w="151"/><text x="10.3032%" y="223.50">suballoc.exe`..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::rng_inner&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;(chacha20::ChaChaCore&lt;chacha20::R12,enum2$ (140 samples, 8.28%)</title><rect x="10.7037%" y="197" width="8.2791%" height="15" fill="rgb(244,70,9)" fg:x="181" fg:w="140"/><text x="10.9537%" y="207.50">suballoc.exe..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.18%)</title><rect x="18.8054%" y="181" width="0.1774%" height="15" fill="rgb(217,125,39)" fg:x="318" fg:w="3"/><text x="19.0554%" y="191.50"></text></g><g><title>suballoc.exe`rand::rng::Rng::random_bool (199 samples, 11.77%)</title><rect x="7.3921%" y="373" width="11.7682%" height="15" fill="rgb(235,36,10)" fg:x="125" fg:w="199"/><text x="7.6421%" y="383.50">suballoc.exe`rand..</text></g><g><title>suballoc.exe`rand::rng::Rng::sample (199 samples, 11.77%)</title><rect x="7.3921%" y="357" width="11.7682%" height="15" fill="rgb(251,123,47)" fg:x="125" fg:w="199"/><text x="7.6421%" y="367.50">suballoc.exe`rand..</text></g><g><title>suballoc.exe`rand::distr::bernoulli::impl$3::sample (199 samples, 11.77%)</title><rect x="7.3921%" y="341" width="11.7682%" height="15" fill="rgb(221,13,13)" fg:x="125" fg:w="199"/><text x="7.6421%" y="351.50">suballoc.exe`rand..</text></g><g><title>suballoc.exe`rand::rng::Rng::random (181 samples, 10.70%)</title><rect x="8.4565%" y="325" width="10.7037%" height="15" fill="rgb(238,131,9)" fg:x="143" fg:w="181"/><text x="8.7065%" y="335.50">suballoc.exe`ran..</text></g><g><title>suballoc.exe`rand::distr::integer::impl$3::sample (181 samples, 10.70%)</title><rect x="8.4565%" y="309" width="10.7037%" height="15" fill="rgb(211,50,8)" fg:x="143" fg:w="181"/><text x="8.7065%" y="319.50">suballoc.exe`ran..</text></g><g><title>suballoc.exe`rand::rngs::thread::impl$3::next_u64 (181 samples, 10.70%)</title><rect x="8.4565%" y="293" width="10.7037%" height="15" fill="rgb(245,182,24)" fg:x="143" fg:w="181"/><text x="8.7065%" y="303.50">suballoc.exe`ran..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$1::next_u64(rand::rngs::reseeding::ReseedingRng (181 samples, 10.70%)</title><rect x="8.4565%" y="277" width="10.7037%" height="15" fill="rgb(242,14,37)" fg:x="143" fg:w="181"/><text x="8.7065%" y="287.50">suballoc.exe`ran..</text></g><g><title>suballoc.exe`rand_core::block::impl$2::next_u64(rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore (181 samples, 10.70%)</title><rect x="8.4565%" y="261" width="10.7037%" height="15" fill="rgb(246,228,12)" fg:x="143" fg:w="181"/><text x="8.7065%" y="271.50">suballoc.exe`ran..</text></g><g><title>suballoc.exe`rand_core::block::impl$2::next_u64::closure$0(rand_core::block::impl$2::next_u64::closure_env$0&lt;rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; &gt;*, ref$&lt;slice2$ (3 samples, 0.18%)</title><rect x="18.9829%" y="245" width="0.1774%" height="15" fill="rgb(213,55,15)" fg:x="321" fg:w="3"/><text x="19.2329%" y="255.50"></text></g><g><title>suballoc.exe`core::num::impl$8::wrapping_neg (24 samples, 1.42%)</title><rect x="19.2194%" y="293" width="1.4193%" height="15" fill="rgb(209,9,3)" fg:x="325" fg:w="24"/><text x="19.4694%" y="303.50"></text></g><g><title>suballoc.exe`core::num::impl$8::wrapping_sub (24 samples, 1.42%)</title><rect x="19.2194%" y="277" width="1.4193%" height="15" fill="rgb(230,59,30)" fg:x="325" fg:w="24"/><text x="19.4694%" y="287.50"></text></g><g><title>suballoc.exe`rand::distr::utils::impl$5::wmul (7 samples, 0.41%)</title><rect x="20.6387%" y="293" width="0.4140%" height="15" fill="rgb(209,121,21)" fg:x="349" fg:w="7"/><text x="20.8887%" y="303.50"></text></g><g><title>suballoc.exe`chacha20::ChaChaCore&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::generate&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt; (3 samples, 0.18%)</title><rect x="23.0633%" y="165" width="0.1774%" height="15" fill="rgb(220,109,13)" fg:x="390" fg:w="3"/><text x="23.3133%" y="175.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi32 (17 samples, 1.01%)</title><rect x="23.2998%" y="85" width="1.0053%" height="15" fill="rgb(232,18,1)" fg:x="394" fg:w="17"/><text x="23.5498%" y="95.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_shuffle_epi8 (9 samples, 0.53%)</title><rect x="24.3051%" y="85" width="0.5322%" height="15" fill="rgb(215,41,42)" fg:x="411" fg:w="9"/><text x="24.5551%" y="95.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::add_xor_rot (38 samples, 2.25%)</title><rect x="23.2998%" y="101" width="2.2472%" height="15" fill="rgb(224,123,36)" fg:x="394" fg:w="38"/><text x="23.5498%" y="111.50">s..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_slli_epi32 (12 samples, 0.71%)</title><rect x="24.8374%" y="85" width="0.7096%" height="15" fill="rgb(240,125,3)" fg:x="420" fg:w="12"/><text x="25.0874%" y="95.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::double_quarter_round (39 samples, 2.31%)</title><rect x="23.2998%" y="117" width="2.3063%" height="15" fill="rgb(205,98,50)" fg:x="394" fg:w="39"/><text x="23.5498%" y="127.50">s..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::cols_to_rows (1 samples, 0.06%)</title><rect x="25.5470%" y="101" width="0.0591%" height="15" fill="rgb(205,185,37)" fg:x="432" fg:w="1"/><text x="25.7970%" y="111.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.06%)</title><rect x="25.5470%" y="85" width="0.0591%" height="15" fill="rgb(238,207,15)" fg:x="432" fg:w="1"/><text x="25.7970%" y="95.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::Backend&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::rng_gen_par_ks_blocks (40 samples, 2.37%)</title><rect x="23.2998%" y="149" width="2.3655%" height="15" fill="rgb(213,199,42)" fg:x="394" fg:w="40"/><text x="23.5498%" y="159.50">su..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::rounds (40 samples, 2.37%)</title><rect x="23.2998%" y="133" width="2.3655%" height="15" fill="rgb(235,201,11)" fg:x="394" fg:w="40"/><text x="23.5498%" y="143.50">su..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.06%)</title><rect x="25.6062%" y="117" width="0.0591%" height="15" fill="rgb(207,46,11)" fg:x="433" fg:w="1"/><text x="25.8562%" y="127.50"></text></g><g><title>suballoc.exe`chacha20::rng::impl$42::generate (45 samples, 2.66%)</title><rect x="23.0633%" y="181" width="2.6611%" height="15" fill="rgb(241,35,35)" fg:x="390" fg:w="45"/><text x="23.3133%" y="191.50">su..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::rng_inner&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;(chacha20::ChaChaCore&lt;chacha20::R12,enum2$ (42 samples, 2.48%)</title><rect x="23.2407%" y="165" width="2.4837%" height="15" fill="rgb(243,32,47)" fg:x="393" fg:w="42"/><text x="23.4907%" y="175.50">su..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.06%)</title><rect x="25.6653%" y="149" width="0.0591%" height="15" fill="rgb(247,202,23)" fg:x="434" fg:w="1"/><text x="25.9153%" y="159.50"></text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$23::sample_single (111 samples, 6.56%)</title><rect x="19.2194%" y="325" width="6.5642%" height="15" fill="rgb(219,102,11)" fg:x="325" fg:w="111"/><text x="19.4694%" y="335.50">suballoc...</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$23::sample_single_inclusive (111 samples, 6.56%)</title><rect x="19.2194%" y="309" width="6.5642%" height="15" fill="rgb(243,110,44)" fg:x="325" fg:w="111"/><text x="19.4694%" y="319.50">suballoc...</text></g><g><title>suballoc.exe`rand::rng::Rng::random (80 samples, 4.73%)</title><rect x="21.0526%" y="293" width="4.7309%" height="15" fill="rgb(222,74,54)" fg:x="356" fg:w="80"/><text x="21.3026%" y="303.50">suball..</text></g><g><title>suballoc.exe`rand::distr::integer::impl$2::sample (80 samples, 4.73%)</title><rect x="21.0526%" y="277" width="4.7309%" height="15" fill="rgb(216,99,12)" fg:x="356" fg:w="80"/><text x="21.3026%" y="287.50">suball..</text></g><g><title>suballoc.exe`rand::rngs::thread::impl$3::next_u32 (80 samples, 4.73%)</title><rect x="21.0526%" y="261" width="4.7309%" height="15" fill="rgb(226,22,26)" fg:x="356" fg:w="80"/><text x="21.3026%" y="271.50">suball..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$1::next_u32(rand::rngs::reseeding::ReseedingRng (80 samples, 4.73%)</title><rect x="21.0526%" y="245" width="4.7309%" height="15" fill="rgb(217,163,10)" fg:x="356" fg:w="80"/><text x="21.3026%" y="255.50">suball..</text></g><g><title>suballoc.exe`rand_core::block::impl$2::next_u32(rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore (80 samples, 4.73%)</title><rect x="21.0526%" y="229" width="4.7309%" height="15" fill="rgb(213,25,53)" fg:x="356" fg:w="80"/><text x="21.3026%" y="239.50">suball..</text></g><g><title>suballoc.exe`rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; &gt;::generate_and_set (50 samples, 2.96%)</title><rect x="22.8267%" y="213" width="2.9568%" height="15" fill="rgb(252,105,26)" fg:x="386" fg:w="50"/><text x="23.0767%" y="223.50">sub..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$4::generate(rand::rngs::reseeding::ReseedingCore (50 samples, 2.96%)</title><rect x="22.8267%" y="197" width="2.9568%" height="15" fill="rgb(220,39,43)" fg:x="386" fg:w="50"/><text x="23.0767%" y="207.50">sub..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt;::reseed_and_generate&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; (1 samples, 0.06%)</title><rect x="25.7244%" y="181" width="0.0591%" height="15" fill="rgb(229,68,48)" fg:x="435" fg:w="1"/><text x="25.9744%" y="191.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt;::reseed (1 samples, 0.06%)</title><rect x="25.7244%" y="165" width="0.0591%" height="15" fill="rgb(252,8,32)" fg:x="435" fg:w="1"/><text x="25.9744%" y="175.50"></text></g><g><title>suballoc.exe`rand_core::SeedableRng::try_from_rng (1 samples, 0.06%)</title><rect x="25.7244%" y="149" width="0.0591%" height="15" fill="rgb(223,20,43)" fg:x="435" fg:w="1"/><text x="25.9744%" y="159.50"></text></g><g><title>`0x7FFCD594513C (1 samples, 0.06%)</title><rect x="25.7244%" y="133" width="0.0591%" height="15" fill="rgb(229,81,49)" fg:x="435" fg:w="1"/><text x="25.9744%" y="143.50"></text></g><g><title>`0x7FFCD59453DF (1 samples, 0.06%)</title><rect x="25.7244%" y="117" width="0.0591%" height="15" fill="rgb(236,28,36)" fg:x="435" fg:w="1"/><text x="25.9744%" y="127.50"></text></g><g><title>`0x7FFCD5946849 (1 samples, 0.06%)</title><rect x="25.7244%" y="101" width="0.0591%" height="15" fill="rgb(249,185,26)" fg:x="435" fg:w="1"/><text x="25.9744%" y="111.50"></text></g><g><title>`0x7FFCD59468AB (1 samples, 0.06%)</title><rect x="25.7244%" y="85" width="0.0591%" height="15" fill="rgb(249,174,33)" fg:x="435" fg:w="1"/><text x="25.9744%" y="95.50"></text></g><g><title>`0x7FFCD8334603 (1 samples, 0.06%)</title><rect x="25.7244%" y="69" width="0.0591%" height="15" fill="rgb(233,201,37)" fg:x="435" fg:w="1"/><text x="25.9744%" y="79.50"></text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$1::sample_single (113 samples, 6.68%)</title><rect x="19.1603%" y="341" width="6.6824%" height="15" fill="rgb(221,78,26)" fg:x="324" fg:w="113"/><text x="19.4103%" y="351.50">suballoc...</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$25::sample_single (1 samples, 0.06%)</title><rect x="25.7836%" y="325" width="0.0591%" height="15" fill="rgb(250,127,30)" fg:x="436" fg:w="1"/><text x="26.0336%" y="335.50"></text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$25::sample_single_inclusive (1 samples, 0.06%)</title><rect x="25.7836%" y="309" width="0.0591%" height="15" fill="rgb(230,49,44)" fg:x="436" fg:w="1"/><text x="26.0336%" y="319.50"></text></g><g><title>suballoc.exe`rand::rng::Rng::random (1 samples, 0.06%)</title><rect x="25.7836%" y="293" width="0.0591%" height="15" fill="rgb(229,67,23)" fg:x="436" fg:w="1"/><text x="26.0336%" y="303.50"></text></g><g><title>suballoc.exe`rand::distr::integer::impl$3::sample (1 samples, 0.06%)</title><rect x="25.7836%" y="277" width="0.0591%" height="15" fill="rgb(249,83,47)" fg:x="436" fg:w="1"/><text x="26.0336%" y="287.50"></text></g><g><title>suballoc.exe`rand::rngs::thread::impl$3::next_u64 (1 samples, 0.06%)</title><rect x="25.7836%" y="261" width="0.0591%" height="15" fill="rgb(215,43,3)" fg:x="436" fg:w="1"/><text x="26.0336%" y="271.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$1::next_u64(rand::rngs::reseeding::ReseedingRng (1 samples, 0.06%)</title><rect x="25.7836%" y="245" width="0.0591%" height="15" fill="rgb(238,154,13)" fg:x="436" fg:w="1"/><text x="26.0336%" y="255.50"></text></g><g><title>suballoc.exe`rand_core::block::impl$2::next_u64(rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore (1 samples, 0.06%)</title><rect x="25.7836%" y="229" width="0.0591%" height="15" fill="rgb(219,56,2)" fg:x="436" fg:w="1"/><text x="26.0336%" y="239.50"></text></g><g><title>suballoc.exe`rand::distr::utils::impl$5::wmul (8 samples, 0.47%)</title><rect x="27.6759%" y="309" width="0.4731%" height="15" fill="rgb(233,0,4)" fg:x="468" fg:w="8"/><text x="27.9259%" y="319.50"></text></g><g><title>suballoc.exe`chacha20::ChaChaCore&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::generate&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt; (3 samples, 0.18%)</title><rect x="32.5843%" y="181" width="0.1774%" height="15" fill="rgb(235,30,7)" fg:x="551" fg:w="3"/><text x="32.8343%" y="191.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi32 (12 samples, 0.71%)</title><rect x="32.8208%" y="101" width="0.7096%" height="15" fill="rgb(250,79,13)" fg:x="555" fg:w="12"/><text x="33.0708%" y="111.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_shuffle_epi8 (10 samples, 0.59%)</title><rect x="33.5305%" y="101" width="0.5914%" height="15" fill="rgb(211,146,34)" fg:x="567" fg:w="10"/><text x="33.7805%" y="111.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_slli_epi32 (23 samples, 1.36%)</title><rect x="34.1218%" y="101" width="1.3601%" height="15" fill="rgb(228,22,38)" fg:x="577" fg:w="23"/><text x="34.3718%" y="111.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::double_quarter_round (46 samples, 2.72%)</title><rect x="32.8208%" y="133" width="2.7203%" height="15" fill="rgb(235,168,5)" fg:x="555" fg:w="46"/><text x="33.0708%" y="143.50">su..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::add_xor_rot (46 samples, 2.72%)</title><rect x="32.8208%" y="117" width="2.7203%" height="15" fill="rgb(221,155,16)" fg:x="555" fg:w="46"/><text x="33.0708%" y="127.50">su..</text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.06%)</title><rect x="35.4820%" y="101" width="0.0591%" height="15" fill="rgb(215,215,53)" fg:x="600" fg:w="1"/><text x="35.7320%" y="111.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::rounds (47 samples, 2.78%)</title><rect x="32.8208%" y="149" width="2.7794%" height="15" fill="rgb(223,4,10)" fg:x="555" fg:w="47"/><text x="33.0708%" y="159.50">su..</text></g><g><title>suballoc.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.06%)</title><rect x="35.5411%" y="133" width="0.0591%" height="15" fill="rgb(234,103,6)" fg:x="601" fg:w="1"/><text x="35.7911%" y="143.50"></text></g><g><title>suballoc.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.06%)</title><rect x="35.5411%" y="117" width="0.0591%" height="15" fill="rgb(227,97,0)" fg:x="601" fg:w="1"/><text x="35.7911%" y="127.50"></text></g><g><title>suballoc.exe`core::cmp::impls::impl$58::lt (1 samples, 0.06%)</title><rect x="35.5411%" y="101" width="0.0591%" height="15" fill="rgb(234,150,53)" fg:x="601" fg:w="1"/><text x="35.7911%" y="111.50"></text></g><g><title>suballoc.exe`rand::rng::Rng::random_range(rand::rngs::thread::ThreadRng*, core::ops::range::Range (279 samples, 16.50%)</title><rect x="19.1603%" y="373" width="16.4991%" height="15" fill="rgb(228,201,54)" fg:x="324" fg:w="279"/><text x="19.4103%" y="383.50">suballoc.exe`rand::rng::R..</text></g><g><title>suballoc.exe`rand::distr::uniform::impl$8::sample_single(core::ops::range::Range (279 samples, 16.50%)</title><rect x="19.1603%" y="357" width="16.4991%" height="15" fill="rgb(222,22,37)" fg:x="324" fg:w="279"/><text x="19.4103%" y="367.50">suballoc.exe`rand::distr:..</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$23::sample_single (166 samples, 9.82%)</title><rect x="25.8427%" y="341" width="9.8167%" height="15" fill="rgb(237,53,32)" fg:x="437" fg:w="166"/><text x="26.0927%" y="351.50">suballoc.exe`r..</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$23::sample_single_inclusive (166 samples, 9.82%)</title><rect x="25.8427%" y="325" width="9.8167%" height="15" fill="rgb(233,25,53)" fg:x="437" fg:w="166"/><text x="26.0927%" y="335.50">suballoc.exe`r..</text></g><g><title>suballoc.exe`rand::rng::Rng::random (127 samples, 7.51%)</title><rect x="28.1490%" y="309" width="7.5103%" height="15" fill="rgb(210,40,34)" fg:x="476" fg:w="127"/><text x="28.3990%" y="319.50">suballoc.e..</text></g><g><title>suballoc.exe`rand::distr::integer::impl$2::sample (127 samples, 7.51%)</title><rect x="28.1490%" y="293" width="7.5103%" height="15" fill="rgb(241,220,44)" fg:x="476" fg:w="127"/><text x="28.3990%" y="303.50">suballoc.e..</text></g><g><title>suballoc.exe`rand::rngs::thread::impl$3::next_u32 (127 samples, 7.51%)</title><rect x="28.1490%" y="277" width="7.5103%" height="15" fill="rgb(235,28,35)" fg:x="476" fg:w="127"/><text x="28.3990%" y="287.50">suballoc.e..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$1::next_u32(rand::rngs::reseeding::ReseedingRng (127 samples, 7.51%)</title><rect x="28.1490%" y="261" width="7.5103%" height="15" fill="rgb(210,56,17)" fg:x="476" fg:w="127"/><text x="28.3990%" y="271.50">suballoc.e..</text></g><g><title>suballoc.exe`rand_core::block::impl$2::next_u32(rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore (127 samples, 7.51%)</title><rect x="28.1490%" y="245" width="7.5103%" height="15" fill="rgb(224,130,29)" fg:x="476" fg:w="127"/><text x="28.3990%" y="255.50">suballoc.e..</text></g><g><title>suballoc.exe`rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; &gt;::generate_and_set (53 samples, 3.13%)</title><rect x="32.5251%" y="229" width="3.1342%" height="15" fill="rgb(235,212,8)" fg:x="550" fg:w="53"/><text x="32.7751%" y="239.50">sub..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$4::generate(rand::rngs::reseeding::ReseedingCore (53 samples, 3.13%)</title><rect x="32.5251%" y="213" width="3.1342%" height="15" fill="rgb(223,33,50)" fg:x="550" fg:w="53"/><text x="32.7751%" y="223.50">sub..</text></g><g><title>suballoc.exe`chacha20::rng::impl$42::generate (52 samples, 3.08%)</title><rect x="32.5843%" y="197" width="3.0751%" height="15" fill="rgb(219,149,13)" fg:x="551" fg:w="52"/><text x="32.8343%" y="207.50">sub..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::rng_inner&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;(chacha20::ChaChaCore&lt;chacha20::R12,enum2$ (49 samples, 2.90%)</title><rect x="32.7617%" y="181" width="2.8977%" height="15" fill="rgb(250,156,29)" fg:x="554" fg:w="49"/><text x="33.0117%" y="191.50">su..</text></g><g><title>suballoc.exe`chacha20::backends::avx2::Backend&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::rng_gen_par_ks_blocks (48 samples, 2.84%)</title><rect x="32.8208%" y="165" width="2.8386%" height="15" fill="rgb(216,193,19)" fg:x="555" fg:w="48"/><text x="33.0708%" y="175.50">su..</text></g><g><title>suballoc.exe`core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.06%)</title><rect x="35.6002%" y="149" width="0.0591%" height="15" fill="rgb(216,135,14)" fg:x="602" fg:w="1"/><text x="35.8502%" y="159.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::write_unaligned (1 samples, 0.06%)</title><rect x="35.6002%" y="133" width="0.0591%" height="15" fill="rgb(241,47,5)" fg:x="602" fg:w="1"/><text x="35.8502%" y="143.50"></text></g><g><title>suballoc.exe`core::ptr::write_unaligned (1 samples, 0.06%)</title><rect x="35.6002%" y="117" width="0.0591%" height="15" fill="rgb(233,42,35)" fg:x="602" fg:w="1"/><text x="35.8502%" y="127.50"></text></g><g><title>suballoc.exe`core::ptr::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="35.6002%" y="101" width="0.0591%" height="15" fill="rgb(231,13,6)" fg:x="602" fg:w="1"/><text x="35.8502%" y="111.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::align_up (6 samples, 0.35%)</title><rect x="35.6594%" y="357" width="0.3548%" height="15" fill="rgb(207,181,40)" fg:x="603" fg:w="6"/><text x="35.9094%" y="367.50"></text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (31 samples, 1.83%)</title><rect x="41.7504%" y="341" width="1.8332%" height="15" fill="rgb(254,173,49)" fg:x="706" fg:w="31"/><text x="42.0004%" y="351.50">s..</text></g><g><title>suballoc.exe`core::num::impl$8::trailing_zeros (26 samples, 1.54%)</title><rect x="43.5837%" y="341" width="1.5376%" height="15" fill="rgb(221,1,38)" fg:x="737" fg:w="26"/><text x="43.8337%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::left_mask_from (13 samples, 0.77%)</title><rect x="45.1212%" y="341" width="0.7688%" height="15" fill="rgb(206,124,46)" fg:x="763" fg:w="13"/><text x="45.3712%" y="351.50"></text></g><g><title>suballoc.exe`core::num::impl$8::trailing_zeros (12 samples, 0.71%)</title><rect x="47.4867%" y="325" width="0.7096%" height="15" fill="rgb(249,21,11)" fg:x="803" fg:w="12"/><text x="47.7367%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::mapping_search (220 samples, 13.01%)</title><rect x="36.0142%" y="357" width="13.0101%" height="15" fill="rgb(222,201,40)" fg:x="609" fg:w="220"/><text x="36.2642%" y="367.50">suballoc.exe`suballo..</text></g><g><title>suballoc.exe`suballoc::tlsf::impl$0::mapping_search::find_sl_for_fl (53 samples, 3.13%)</title><rect x="45.8900%" y="341" width="3.1342%" height="15" fill="rgb(235,61,29)" fg:x="776" fg:w="53"/><text x="46.1400%" y="351.50">sub..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::calc_sl_index_for_fl (14 samples, 0.83%)</title><rect x="48.1963%" y="325" width="0.8279%" height="15" fill="rgb(219,207,3)" fg:x="815" fg:w="14"/><text x="48.4463%" y="335.50"></text></g><g><title>suballoc.exe`enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;::take (41 samples, 2.42%)</title><rect x="53.6960%" y="341" width="2.4246%" height="15" fill="rgb(222,56,46)" fg:x="908" fg:w="41"/><text x="53.9460%" y="351.50">su..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::popf_free_link (133 samples, 7.87%)</title><rect x="49.0242%" y="357" width="7.8652%" height="15" fill="rgb(239,76,54)" fg:x="829" fg:w="133"/><text x="49.2742%" y="367.50">suballoc.ex..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::set_bitmap_index_empty (13 samples, 0.77%)</title><rect x="56.1206%" y="341" width="0.7688%" height="15" fill="rgb(231,124,27)" fg:x="949" fg:w="13"/><text x="56.3706%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::or_flags (26 samples, 1.54%)</title><rect x="57.4216%" y="341" width="1.5376%" height="15" fill="rgb(249,195,6)" fg:x="971" fg:w="26"/><text x="57.6716%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (22 samples, 1.30%)</title><rect x="58.9592%" y="341" width="1.3010%" height="15" fill="rgb(237,174,47)" fg:x="997" fg:w="22"/><text x="59.2092%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::impl$1::block_add (2 samples, 0.12%)</title><rect x="60.2602%" y="341" width="0.1183%" height="15" fill="rgb(206,201,31)" fg:x="1019" fg:w="2"/><text x="60.5102%" y="351.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_add (2 samples, 0.12%)</title><rect x="60.2602%" y="325" width="0.1183%" height="15" fill="rgb(231,57,52)" fg:x="1019" fg:w="2"/><text x="60.5102%" y="335.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::add (2 samples, 0.12%)</title><rect x="60.2602%" y="309" width="0.1183%" height="15" fill="rgb(248,177,22)" fg:x="1019" fg:w="2"/><text x="60.5102%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_size_flags (10 samples, 0.59%)</title><rect x="60.3785%" y="325" width="0.5914%" height="15" fill="rgb(215,211,37)" fg:x="1021" fg:w="10"/><text x="60.6285%" y="335.50"></text></g><g><title>suballoc.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (15 samples, 0.89%)</title><rect x="62.0934%" y="309" width="0.8870%" height="15" fill="rgb(241,128,51)" fg:x="1050" fg:w="15"/><text x="62.3434%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (1 samples, 0.06%)</title><rect x="62.9805%" y="309" width="0.0591%" height="15" fill="rgb(227,165,31)" fg:x="1065" fg:w="1"/><text x="63.2305%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::set_next_link(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (7 samples, 0.41%)</title><rect x="63.0396%" y="309" width="0.4140%" height="15" fill="rgb(228,167,24)" fg:x="1066" fg:w="7"/><text x="63.2896%" y="319.50"></text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (6 samples, 0.35%)</title><rect x="63.4536%" y="293" width="0.3548%" height="15" fill="rgb(228,143,12)" fg:x="1073" fg:w="6"/><text x="63.7036%" y="303.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::mapping_insert (26 samples, 1.54%)</title><rect x="63.4536%" y="309" width="1.5376%" height="15" fill="rgb(249,149,8)" fg:x="1073" fg:w="26"/><text x="63.7036%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::calc_sl_index_for_fl (20 samples, 1.18%)</title><rect x="63.8084%" y="293" width="1.1827%" height="15" fill="rgb(243,35,44)" fg:x="1079" fg:w="20"/><text x="64.0584%" y="303.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::pushf_free_link(core::ptr::non_null::NonNull (75 samples, 4.44%)</title><rect x="60.9698%" y="325" width="4.4352%" height="15" fill="rgb(246,89,9)" fg:x="1031" fg:w="75"/><text x="61.2198%" y="335.50">subal..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::set_bitmap_index_available (7 samples, 0.41%)</title><rect x="64.9911%" y="309" width="0.4140%" height="15" fill="rgb(233,213,13)" fg:x="1099" fg:w="7"/><text x="65.2411%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::push_leftover_block (99 samples, 5.85%)</title><rect x="60.3785%" y="341" width="5.8545%" height="15" fill="rgb(233,141,41)" fg:x="1021" fg:w="99"/><text x="60.6285%" y="351.50">suballo..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_head (14 samples, 0.83%)</title><rect x="65.4051%" y="325" width="0.8279%" height="15" fill="rgb(239,167,4)" fg:x="1106" fg:w="14"/><text x="65.6551%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::or_flags (4 samples, 0.24%)</title><rect x="66.4695%" y="325" width="0.2365%" height="15" fill="rgb(209,217,16)" fg:x="1124" fg:w="4"/><text x="66.7195%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (7 samples, 0.41%)</title><rect x="66.7061%" y="325" width="0.4140%" height="15" fill="rgb(219,88,35)" fg:x="1128" fg:w="7"/><text x="66.9561%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::block::impl$1::block_add (3 samples, 0.18%)</title><rect x="67.1200%" y="325" width="0.1774%" height="15" fill="rgb(220,193,23)" fg:x="1135" fg:w="3"/><text x="67.3700%" y="335.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_add (3 samples, 0.18%)</title><rect x="67.1200%" y="309" width="0.1774%" height="15" fill="rgb(230,90,52)" fg:x="1135" fg:w="3"/><text x="67.3700%" y="319.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::add (3 samples, 0.18%)</title><rect x="67.1200%" y="293" width="0.1774%" height="15" fill="rgb(252,106,19)" fg:x="1135" fg:w="3"/><text x="67.3700%" y="303.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::ptr_eq_mem_end (4 samples, 0.24%)</title><rect x="67.2975%" y="325" width="0.2365%" height="15" fill="rgb(206,74,20)" fg:x="1138" fg:w="4"/><text x="67.5475%" y="335.50"></text></g><g><title>suballoc.exe`core::ptr::const_ptr::impl$0::add (2 samples, 0.12%)</title><rect x="67.4157%" y="309" width="0.1183%" height="15" fill="rgb(230,138,44)" fg:x="1140" fg:w="2"/><text x="67.6657%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_head (4 samples, 0.24%)</title><rect x="67.5340%" y="325" width="0.2365%" height="15" fill="rgb(235,182,43)" fg:x="1142" fg:w="4"/><text x="67.7840%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::use_entire_block (43 samples, 2.54%)</title><rect x="66.2330%" y="341" width="2.5429%" height="15" fill="rgb(242,16,51)" fg:x="1120" fg:w="43"/><text x="66.4830%" y="351.50">su..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_meta (17 samples, 1.01%)</title><rect x="67.7705%" y="325" width="1.0053%" height="15" fill="rgb(248,9,4)" fg:x="1146" fg:w="17"/><text x="68.0205%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::allocate (567 samples, 33.53%)</title><rect x="35.6594%" y="373" width="33.5305%" height="15" fill="rgb(210,31,22)" fg:x="603" fg:w="567"/><text x="35.9094%" y="383.50">suballoc.exe`suballoc::tlsf::SubAllocator::allocate</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::use_block (208 samples, 12.30%)</title><rect x="56.8894%" y="357" width="12.3004%" height="15" fill="rgb(239,54,39)" fg:x="962" fg:w="208"/><text x="57.1394%" y="367.50">suballoc.exe`subal..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_head (7 samples, 0.41%)</title><rect x="68.7759%" y="341" width="0.4140%" height="15" fill="rgb(230,99,41)" fg:x="1163" fg:w="7"/><text x="69.0259%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (42 samples, 2.48%)</title><rect x="70.0177%" y="357" width="2.4837%" height="15" fill="rgb(253,106,12)" fg:x="1184" fg:w="42"/><text x="70.2677%" y="367.50">su..</text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::clear_or_flags (3 samples, 0.18%)</title><rect x="73.2703%" y="341" width="0.1774%" height="15" fill="rgb(213,46,41)" fg:x="1239" fg:w="3"/><text x="73.5203%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (34 samples, 2.01%)</title><rect x="73.4477%" y="341" width="2.0106%" height="15" fill="rgb(215,133,35)" fg:x="1242" fg:w="34"/><text x="73.6977%" y="351.50">s..</text></g><g><title>suballoc.exe`suballoc::block::impl$1::block_add (12 samples, 0.71%)</title><rect x="75.4583%" y="341" width="0.7096%" height="15" fill="rgb(213,28,5)" fg:x="1276" fg:w="12"/><text x="75.7083%" y="351.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_add (12 samples, 0.71%)</title><rect x="75.4583%" y="325" width="0.7096%" height="15" fill="rgb(215,77,49)" fg:x="1276" fg:w="12"/><text x="75.7083%" y="335.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::add (12 samples, 0.71%)</title><rect x="75.4583%" y="309" width="0.7096%" height="15" fill="rgb(248,100,22)" fg:x="1276" fg:w="12"/><text x="75.7083%" y="319.50"></text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (30 samples, 1.77%)</title><rect x="76.3454%" y="325" width="1.7741%" height="15" fill="rgb(208,67,9)" fg:x="1291" fg:w="30"/><text x="76.5954%" y="335.50">s..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::mapping_insert (46 samples, 2.72%)</title><rect x="76.1679%" y="341" width="2.7203%" height="15" fill="rgb(219,133,21)" fg:x="1288" fg:w="46"/><text x="76.4179%" y="351.50">su..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::calc_sl_index_for_fl (13 samples, 0.77%)</title><rect x="78.1195%" y="325" width="0.7688%" height="15" fill="rgb(246,46,29)" fg:x="1321" fg:w="13"/><text x="78.3695%" y="335.50"></text></g><g><title>suballoc.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$&lt;array$&lt;enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (1 samples, 0.06%)</title><rect x="79.8936%" y="325" width="0.0591%" height="15" fill="rgb(246,185,52)" fg:x="1351" fg:w="1"/><text x="80.1436%" y="335.50"></text></g><g><title>suballoc.exe`core::slice::index::impl$2::get_unchecked_mut(unsigned long long, ptr_mut$&lt;slice2$&lt;array$&lt;enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (1 samples, 0.06%)</title><rect x="79.8936%" y="309" width="0.0591%" height="15" fill="rgb(252,136,11)" fg:x="1351" fg:w="1"/><text x="80.1436%" y="319.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::next_link (3 samples, 0.18%)</title><rect x="79.9527%" y="325" width="0.1774%" height="15" fill="rgb(219,138,53)" fg:x="1352" fg:w="3"/><text x="80.2027%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::prev_link (3 samples, 0.18%)</title><rect x="80.1301%" y="325" width="0.1774%" height="15" fill="rgb(211,51,23)" fg:x="1355" fg:w="3"/><text x="80.3801%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::remove_free_link (29 samples, 1.71%)</title><rect x="78.8882%" y="341" width="1.7150%" height="15" fill="rgb(247,221,28)" fg:x="1334" fg:w="29"/><text x="79.1382%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::set_bitmap_index_empty (5 samples, 0.30%)</title><rect x="80.3075%" y="325" width="0.2957%" height="15" fill="rgb(251,222,45)" fg:x="1358" fg:w="5"/><text x="80.5575%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::coalesce_next (146 samples, 8.63%)</title><rect x="72.5015%" y="357" width="8.6339%" height="15" fill="rgb(217,162,53)" fg:x="1226" fg:w="146"/><text x="72.7515%" y="367.50">suballoc.exe..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_head (9 samples, 0.53%)</title><rect x="80.6032%" y="341" width="0.5322%" height="15" fill="rgb(229,93,14)" fg:x="1363" fg:w="9"/><text x="80.8532%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::clear_or_flags (17 samples, 1.01%)</title><rect x="81.3128%" y="341" width="1.0053%" height="15" fill="rgb(209,67,49)" fg:x="1375" fg:w="17"/><text x="81.5628%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (2 samples, 0.12%)</title><rect x="82.3182%" y="341" width="0.1183%" height="15" fill="rgb(213,87,29)" fg:x="1392" fg:w="2"/><text x="82.5682%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::impl$1::block_sub (9 samples, 0.53%)</title><rect x="82.4364%" y="341" width="0.5322%" height="15" fill="rgb(205,151,52)" fg:x="1394" fg:w="9"/><text x="82.6864%" y="351.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_sub (9 samples, 0.53%)</title><rect x="82.4364%" y="325" width="0.5322%" height="15" fill="rgb(253,215,39)" fg:x="1394" fg:w="9"/><text x="82.6864%" y="335.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::sub (9 samples, 0.53%)</title><rect x="82.4364%" y="309" width="0.5322%" height="15" fill="rgb(221,220,41)" fg:x="1394" fg:w="9"/><text x="82.6864%" y="319.50"></text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (21 samples, 1.24%)</title><rect x="82.9687%" y="325" width="1.2419%" height="15" fill="rgb(218,133,21)" fg:x="1403" fg:w="21"/><text x="83.2187%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::mapping_insert (31 samples, 1.83%)</title><rect x="82.9687%" y="341" width="1.8332%" height="15" fill="rgb(221,193,43)" fg:x="1403" fg:w="31"/><text x="83.2187%" y="351.50">s..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::calc_sl_index_for_fl (10 samples, 0.59%)</title><rect x="84.2105%" y="325" width="0.5914%" height="15" fill="rgb(240,128,52)" fg:x="1424" fg:w="10"/><text x="84.4605%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::next_link (5 samples, 0.30%)</title><rect x="85.5115%" y="325" width="0.2957%" height="15" fill="rgb(253,114,12)" fg:x="1446" fg:w="5"/><text x="85.7615%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::prev_link (1 samples, 0.06%)</title><rect x="85.8072%" y="325" width="0.0591%" height="15" fill="rgb(215,223,47)" fg:x="1451" fg:w="1"/><text x="86.0572%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::coalesce_prev (82 samples, 4.85%)</title><rect x="81.1354%" y="357" width="4.8492%" height="15" fill="rgb(248,225,23)" fg:x="1372" fg:w="82"/><text x="81.3854%" y="367.50">suball..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::remove_free_link (20 samples, 1.18%)</title><rect x="84.8019%" y="341" width="1.1827%" height="15" fill="rgb(250,108,0)" fg:x="1434" fg:w="20"/><text x="85.0519%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::set_bitmap_index_empty (2 samples, 0.12%)</title><rect x="85.8664%" y="325" width="0.1183%" height="15" fill="rgb(228,208,7)" fg:x="1452" fg:w="2"/><text x="86.1164%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::ptr_eq_mem_start (34 samples, 2.01%)</title><rect x="85.9846%" y="357" width="2.0106%" height="15" fill="rgb(244,45,10)" fg:x="1454" fg:w="34"/><text x="86.2346%" y="367.50">s..</text></g><g><title>suballoc.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (37 samples, 2.19%)</title><rect x="89.0006%" y="341" width="2.1881%" height="15" fill="rgb(207,125,25)" fg:x="1505" fg:w="37"/><text x="89.2506%" y="351.50">s..</text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (30 samples, 1.77%)</title><rect x="91.1886%" y="341" width="1.7741%" height="15" fill="rgb(210,195,18)" fg:x="1542" fg:w="30"/><text x="91.4386%" y="351.50">s..</text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::set_next_link(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (23 samples, 1.36%)</title><rect x="92.9627%" y="341" width="1.3601%" height="15" fill="rgb(249,80,12)" fg:x="1572" fg:w="23"/><text x="93.2127%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockHead::set_prev_link(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (3 samples, 0.18%)</title><rect x="94.3229%" y="341" width="0.1774%" height="15" fill="rgb(221,65,9)" fg:x="1595" fg:w="3"/><text x="94.5729%" y="351.50"></text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (12 samples, 0.71%)</title><rect x="94.5594%" y="325" width="0.7096%" height="15" fill="rgb(235,49,36)" fg:x="1599" fg:w="12"/><text x="94.8094%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::mapping_insert (31 samples, 1.83%)</title><rect x="94.5003%" y="341" width="1.8332%" height="15" fill="rgb(225,32,20)" fg:x="1598" fg:w="31"/><text x="94.7503%" y="351.50">s..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::calc_sl_index_for_fl (18 samples, 1.06%)</title><rect x="95.2691%" y="325" width="1.0645%" height="15" fill="rgb(215,141,46)" fg:x="1611" fg:w="18"/><text x="95.5191%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::pushf_free_link(core::ptr::non_null::NonNull (152 samples, 8.99%)</title><rect x="87.9953%" y="357" width="8.9888%" height="15" fill="rgb(250,160,47)" fg:x="1488" fg:w="152"/><text x="88.2453%" y="367.50">suballoc.exe`..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::set_bitmap_index_available (11 samples, 0.65%)</title><rect x="96.3335%" y="341" width="0.6505%" height="15" fill="rgb(216,222,40)" fg:x="1629" fg:w="11"/><text x="96.5835%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::size_between_meta_ptrs (10 samples, 0.59%)</title><rect x="96.9840%" y="357" width="0.5914%" height="15" fill="rgb(234,217,39)" fg:x="1640" fg:w="10"/><text x="97.2340%" y="367.50"></text></g><g><title>suballoc.exe`core::ptr::const_ptr::impl$0::byte_offset_from (10 samples, 0.59%)</title><rect x="96.9840%" y="341" width="0.5914%" height="15" fill="rgb(207,178,40)" fg:x="1640" fg:w="10"/><text x="97.2340%" y="351.50"></text></g><g><title>suballoc.exe`core::ptr::const_ptr::impl$0::offset_from (10 samples, 0.59%)</title><rect x="96.9840%" y="325" width="0.5914%" height="15" fill="rgb(221,136,13)" fg:x="1640" fg:w="10"/><text x="97.2340%" y="335.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_head (17 samples, 1.01%)</title><rect x="97.5754%" y="357" width="1.0053%" height="15" fill="rgb(249,199,10)" fg:x="1650" fg:w="17"/><text x="97.8254%" y="367.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_add (9 samples, 0.53%)</title><rect x="98.0485%" y="341" width="0.5322%" height="15" fill="rgb(249,222,13)" fg:x="1658" fg:w="9"/><text x="98.2985%" y="351.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::add (9 samples, 0.53%)</title><rect x="98.0485%" y="325" width="0.5322%" height="15" fill="rgb(244,185,38)" fg:x="1658" fg:w="9"/><text x="98.2985%" y="335.50"></text></g><g><title>`0x7FFCD82DCC91 (1,675 samples, 99.05%)</title><rect x="0.0591%" y="501" width="99.0538%" height="15" fill="rgb(236,202,9)" fg:x="1" fg:w="1675"/><text x="0.3091%" y="511.50">`0x7FFCD82DCC91</text></g><g><title>`0x7FFCD6C77374 (1,675 samples, 99.05%)</title><rect x="0.0591%" y="485" width="99.0538%" height="15" fill="rgb(250,229,37)" fg:x="1" fg:w="1675"/><text x="0.3091%" y="495.50">`0x7FFCD6C77374</text></g><g><title>suballoc.exe`__scrt_common_main_seh() (1,671 samples, 98.82%)</title><rect x="0.2957%" y="469" width="98.8173%" height="15" fill="rgb(206,174,23)" fg:x="5" fg:w="1671"/><text x="0.5457%" y="479.50">suballoc.exe`__scrt_common_main_seh()</text></g><g><title>suballoc.exe`invoke_main() (1,664 samples, 98.40%)</title><rect x="0.7096%" y="453" width="98.4033%" height="15" fill="rgb(211,33,43)" fg:x="12" fg:w="1664"/><text x="0.9596%" y="463.50">suballoc.exe`invoke_main()</text></g><g><title>suballoc.exe`main (1,664 samples, 98.40%)</title><rect x="0.7096%" y="437" width="98.4033%" height="15" fill="rgb(245,58,50)" fg:x="12" fg:w="1664"/><text x="0.9596%" y="447.50">suballoc.exe`main</text></g><g><title>suballoc.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (1,664 samples, 98.40%)</title><rect x="0.7096%" y="421" width="98.4033%" height="15" fill="rgb(244,68,36)" fg:x="12" fg:w="1664"/><text x="0.9596%" y="431.50">suballoc.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>suballoc.exe`suballoc::main (1,664 samples, 98.40%)</title><rect x="0.7096%" y="405" width="98.4033%" height="15" fill="rgb(232,229,15)" fg:x="12" fg:w="1664"/><text x="0.9596%" y="415.50">suballoc.exe`suballoc::main</text></g><g><title>suballoc.exe`suballoc::test_tlsf2 (1,663 samples, 98.34%)</title><rect x="0.7688%" y="389" width="98.3442%" height="15" fill="rgb(254,30,23)" fg:x="13" fg:w="1663"/><text x="1.0188%" y="399.50">suballoc.exe`suballoc::test_tlsf2</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::deallocate (506 samples, 29.92%)</title><rect x="69.1898%" y="373" width="29.9231%" height="15" fill="rgb(235,160,14)" fg:x="1170" fg:w="506"/><text x="69.4398%" y="383.50">suballoc.exe`suballoc::tlsf::SubAllocator::deall..</text></g><g><title>suballoc.exe`suballoc::tlsf::SubAllocator::with_meta (9 samples, 0.53%)</title><rect x="98.5807%" y="357" width="0.5322%" height="15" fill="rgb(212,155,44)" fg:x="1667" fg:w="9"/><text x="98.8307%" y="367.50"></text></g><g><title>`0x7FFCD8361EA9 (1 samples, 0.06%)</title><rect x="99.1130%" y="453" width="0.0591%" height="15" fill="rgb(226,2,50)" fg:x="1676" fg:w="1"/><text x="99.3630%" y="463.50"></text></g><g><title>`0x7FFCD8361D36 (1 samples, 0.06%)</title><rect x="99.1130%" y="437" width="0.0591%" height="15" fill="rgb(234,177,6)" fg:x="1676" fg:w="1"/><text x="99.3630%" y="447.50"></text></g><g><title>`0x7FFCD837539C (1 samples, 0.06%)</title><rect x="99.1130%" y="421" width="0.0591%" height="15" fill="rgb(217,24,9)" fg:x="1676" fg:w="1"/><text x="99.3630%" y="431.50"></text></g><g><title>`0x7FFCD8375284 (1 samples, 0.06%)</title><rect x="99.1130%" y="405" width="0.0591%" height="15" fill="rgb(220,13,46)" fg:x="1676" fg:w="1"/><text x="99.3630%" y="415.50"></text></g><g><title>`0x7FFCD8362878 (1 samples, 0.06%)</title><rect x="99.1721%" y="453" width="0.0591%" height="15" fill="rgb(239,221,27)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="463.50"></text></g><g><title>`0x7FFCD82D2EA0 (1 samples, 0.06%)</title><rect x="99.1721%" y="437" width="0.0591%" height="15" fill="rgb(222,198,25)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="447.50"></text></g><g><title>`0x7FFCD82D30E5 (1 samples, 0.06%)</title><rect x="99.1721%" y="421" width="0.0591%" height="15" fill="rgb(211,99,13)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="431.50"></text></g><g><title>`0x7FFCD82D2F43 (1 samples, 0.06%)</title><rect x="99.1721%" y="405" width="0.0591%" height="15" fill="rgb(232,111,31)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="415.50"></text></g><g><title>`0x7FFCD82D38C0 (1 samples, 0.06%)</title><rect x="99.1721%" y="389" width="0.0591%" height="15" fill="rgb(245,82,37)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="399.50"></text></g><g><title>`0x7FFCD830E41E (1 samples, 0.06%)</title><rect x="99.1721%" y="373" width="0.0591%" height="15" fill="rgb(227,149,46)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="383.50"></text></g><g><title>`0x7FFCD829E02C (1 samples, 0.06%)</title><rect x="99.1721%" y="357" width="0.0591%" height="15" fill="rgb(218,36,50)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="367.50"></text></g><g><title>`0x7FFCD82A09A3 (1 samples, 0.06%)</title><rect x="99.1721%" y="341" width="0.0591%" height="15" fill="rgb(226,80,48)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="351.50"></text></g><g><title>`0x7FFCD82A22CD (1 samples, 0.06%)</title><rect x="99.1721%" y="325" width="0.0591%" height="15" fill="rgb(238,224,15)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="335.50"></text></g><g><title>`0x7FFCD82A2634 (1 samples, 0.06%)</title><rect x="99.1721%" y="309" width="0.0591%" height="15" fill="rgb(241,136,10)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="319.50"></text></g><g><title>`0x7FFCD82A388C (1 samples, 0.06%)</title><rect x="99.1721%" y="293" width="0.0591%" height="15" fill="rgb(208,32,45)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="303.50"></text></g><g><title>`0x7FFCD82F2F76 (1 samples, 0.06%)</title><rect x="99.1721%" y="277" width="0.0591%" height="15" fill="rgb(207,135,9)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="287.50"></text></g><g><title>`0x7FFCD832EA84 (1 samples, 0.06%)</title><rect x="99.1721%" y="261" width="0.0591%" height="15" fill="rgb(206,86,44)" fg:x="1677" fg:w="1"/><text x="99.4221%" y="271.50"></text></g><g><title>`0x7FFCD83628CC (1 samples, 0.06%)</title><rect x="99.2312%" y="453" width="0.0591%" height="15" fill="rgb(245,177,15)" fg:x="1678" fg:w="1"/><text x="99.4812%" y="463.50"></text></g><g><title>`0x7FFCD82DB045 (1 samples, 0.06%)</title><rect x="99.2312%" y="437" width="0.0591%" height="15" fill="rgb(206,64,50)" fg:x="1678" fg:w="1"/><text x="99.4812%" y="447.50"></text></g><g><title>`0x7FFCD82DB0F7 (1 samples, 0.06%)</title><rect x="99.2312%" y="421" width="0.0591%" height="15" fill="rgb(234,36,40)" fg:x="1678" fg:w="1"/><text x="99.4812%" y="431.50"></text></g><g><title>`0x7FFCD82DB201 (1 samples, 0.06%)</title><rect x="99.2312%" y="405" width="0.0591%" height="15" fill="rgb(213,64,8)" fg:x="1678" fg:w="1"/><text x="99.4812%" y="415.50"></text></g><g><title>`0x7FFCD82DB67D (1 samples, 0.06%)</title><rect x="99.2312%" y="389" width="0.0591%" height="15" fill="rgb(210,75,36)" fg:x="1678" fg:w="1"/><text x="99.4812%" y="399.50"></text></g><g><title>`0x7FFCD82A4AAA (1 samples, 0.06%)</title><rect x="99.2904%" y="357" width="0.0591%" height="15" fill="rgb(229,88,21)" fg:x="1679" fg:w="1"/><text x="99.5404%" y="367.50"></text></g><g><title>`0x7FFCD82A4D42 (1 samples, 0.06%)</title><rect x="99.2904%" y="341" width="0.0591%" height="15" fill="rgb(252,204,47)" fg:x="1679" fg:w="1"/><text x="99.5404%" y="351.50"></text></g><g><title>`0x7FFCD832D9F4 (1 samples, 0.06%)</title><rect x="99.2904%" y="325" width="0.0591%" height="15" fill="rgb(208,77,27)" fg:x="1679" fg:w="1"/><text x="99.5404%" y="335.50"></text></g><g><title>`0x7FFCD82A7B29 (1 samples, 0.06%)</title><rect x="99.3495%" y="341" width="0.0591%" height="15" fill="rgb(221,76,26)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="351.50"></text></g><g><title>`0x7FFCD82A88A8 (1 samples, 0.06%)</title><rect x="99.3495%" y="325" width="0.0591%" height="15" fill="rgb(225,139,18)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="335.50"></text></g><g><title>`0x7FFCD82A4479 (1 samples, 0.06%)</title><rect x="99.3495%" y="309" width="0.0591%" height="15" fill="rgb(230,137,11)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="319.50"></text></g><g><title>`0x7FFCD82A4C14 (1 samples, 0.06%)</title><rect x="99.3495%" y="293" width="0.0591%" height="15" fill="rgb(212,28,1)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="303.50"></text></g><g><title>`0x7FFCD82A7B29 (1 samples, 0.06%)</title><rect x="99.3495%" y="277" width="0.0591%" height="15" fill="rgb(248,164,17)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="287.50"></text></g><g><title>`0x7FFCD82A7EC7 (1 samples, 0.06%)</title><rect x="99.3495%" y="261" width="0.0591%" height="15" fill="rgb(222,171,42)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="271.50"></text></g><g><title>`0x7FFCD82AA7DD (1 samples, 0.06%)</title><rect x="99.3495%" y="245" width="0.0591%" height="15" fill="rgb(243,84,45)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="255.50"></text></g><g><title>`0x7FFCD82AD77D (1 samples, 0.06%)</title><rect x="99.3495%" y="229" width="0.0591%" height="15" fill="rgb(252,49,23)" fg:x="1680" fg:w="1"/><text x="99.5995%" y="239.50"></text></g><g><title>`0x7FFCD82AFB31 (3 samples, 0.18%)</title><rect x="99.2904%" y="405" width="0.1774%" height="15" fill="rgb(215,19,7)" fg:x="1679" fg:w="3"/><text x="99.5404%" y="415.50"></text></g><g><title>`0x7FFCD82FC2ED (3 samples, 0.18%)</title><rect x="99.2904%" y="389" width="0.1774%" height="15" fill="rgb(238,81,41)" fg:x="1679" fg:w="3"/><text x="99.5404%" y="399.50"></text></g><g><title>`0x7FFCD82A4479 (3 samples, 0.18%)</title><rect x="99.2904%" y="373" width="0.1774%" height="15" fill="rgb(210,199,37)" fg:x="1679" fg:w="3"/><text x="99.5404%" y="383.50"></text></g><g><title>`0x7FFCD82A4C14 (2 samples, 0.12%)</title><rect x="99.3495%" y="357" width="0.1183%" height="15" fill="rgb(244,192,49)" fg:x="1680" fg:w="2"/><text x="99.5995%" y="367.50"></text></g><g><title>`0x7FFCD82A7BC4 (1 samples, 0.06%)</title><rect x="99.4086%" y="341" width="0.0591%" height="15" fill="rgb(226,211,11)" fg:x="1681" fg:w="1"/><text x="99.6586%" y="351.50"></text></g><g><title>`0x7FFCD82C268F (1 samples, 0.06%)</title><rect x="99.4086%" y="325" width="0.0591%" height="15" fill="rgb(236,162,54)" fg:x="1681" fg:w="1"/><text x="99.6586%" y="335.50"></text></g><g><title>`0x7FFCD82AFB5D (1 samples, 0.06%)</title><rect x="99.4678%" y="405" width="0.0591%" height="15" fill="rgb(220,229,9)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="415.50"></text></g><g><title>`0x7FFCD82F0048 (1 samples, 0.06%)</title><rect x="99.4678%" y="389" width="0.0591%" height="15" fill="rgb(250,87,22)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="399.50"></text></g><g><title>`0x7FFCD82F0128 (1 samples, 0.06%)</title><rect x="99.4678%" y="373" width="0.0591%" height="15" fill="rgb(239,43,17)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="383.50"></text></g><g><title>`0x7FFCD82C288A (1 samples, 0.06%)</title><rect x="99.4678%" y="357" width="0.0591%" height="15" fill="rgb(231,177,25)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="367.50"></text></g><g><title>`0x7FFCD82E4549 (1 samples, 0.06%)</title><rect x="99.4678%" y="341" width="0.0591%" height="15" fill="rgb(219,179,1)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="351.50"></text></g><g><title>`0x7FFCD82E4861 (1 samples, 0.06%)</title><rect x="99.4678%" y="325" width="0.0591%" height="15" fill="rgb(238,219,53)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="335.50"></text></g><g><title>`0x7FFCD833434F (1 samples, 0.06%)</title><rect x="99.4678%" y="309" width="0.0591%" height="15" fill="rgb(232,167,36)" fg:x="1682" fg:w="1"/><text x="99.7178%" y="319.50"></text></g><g><title>`0x7FFCD83637CE (5 samples, 0.30%)</title><rect x="99.2904%" y="453" width="0.2957%" height="15" fill="rgb(244,19,51)" fg:x="1679" fg:w="5"/><text x="99.5404%" y="463.50"></text></g><g><title>`0x7FFCD82A6AF4 (5 samples, 0.30%)</title><rect x="99.2904%" y="437" width="0.2957%" height="15" fill="rgb(224,6,22)" fg:x="1679" fg:w="5"/><text x="99.5404%" y="447.50"></text></g><g><title>`0x7FFCD82A73E4 (5 samples, 0.30%)</title><rect x="99.2904%" y="421" width="0.2957%" height="15" fill="rgb(224,145,5)" fg:x="1679" fg:w="5"/><text x="99.5404%" y="431.50"></text></g><g><title>`0x7FFCD82AFBAE (1 samples, 0.06%)</title><rect x="99.5269%" y="405" width="0.0591%" height="15" fill="rgb(234,130,49)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="415.50"></text></g><g><title>`0x7FFCD82CD947 (1 samples, 0.06%)</title><rect x="99.5269%" y="389" width="0.0591%" height="15" fill="rgb(254,6,2)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="399.50"></text></g><g><title>`0x7FFCD82FD110 (1 samples, 0.06%)</title><rect x="99.5269%" y="373" width="0.0591%" height="15" fill="rgb(208,96,46)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="383.50"></text></g><g><title>`0x7FFCD82FD08A (1 samples, 0.06%)</title><rect x="99.5269%" y="357" width="0.0591%" height="15" fill="rgb(239,3,39)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="367.50"></text></g><g><title>`0x7FFCD82FD2F7 (1 samples, 0.06%)</title><rect x="99.5269%" y="341" width="0.0591%" height="15" fill="rgb(233,210,1)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="351.50"></text></g><g><title>`0x7FFCD82A9A1D (1 samples, 0.06%)</title><rect x="99.5269%" y="325" width="0.0591%" height="15" fill="rgb(244,137,37)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="335.50"></text></g><g><title>`0x7FFCD6009577 (1 samples, 0.06%)</title><rect x="99.5269%" y="309" width="0.0591%" height="15" fill="rgb(240,136,2)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="319.50"></text></g><g><title>`0x7FFCD6055D72 (1 samples, 0.06%)</title><rect x="99.5269%" y="293" width="0.0591%" height="15" fill="rgb(239,18,37)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="303.50"></text></g><g><title>`0x7FFCD60550BE (1 samples, 0.06%)</title><rect x="99.5269%" y="277" width="0.0591%" height="15" fill="rgb(218,185,22)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="287.50"></text></g><g><title>`0x7FFCD605352D (1 samples, 0.06%)</title><rect x="99.5269%" y="261" width="0.0591%" height="15" fill="rgb(225,218,4)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="271.50"></text></g><g><title>`0x7FFCD60531B8 (1 samples, 0.06%)</title><rect x="99.5269%" y="245" width="0.0591%" height="15" fill="rgb(230,182,32)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="255.50"></text></g><g><title>`0x7FFCD6053EBA (1 samples, 0.06%)</title><rect x="99.5269%" y="229" width="0.0591%" height="15" fill="rgb(242,56,43)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="239.50"></text></g><g><title>`0x7FFCD6053313 (1 samples, 0.06%)</title><rect x="99.5269%" y="213" width="0.0591%" height="15" fill="rgb(233,99,24)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="223.50"></text></g><g><title>`0x7FFCD60559DE (1 samples, 0.06%)</title><rect x="99.5269%" y="197" width="0.0591%" height="15" fill="rgb(234,209,42)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="207.50"></text></g><g><title>`0x7FFCD602954C (1 samples, 0.06%)</title><rect x="99.5269%" y="181" width="0.0591%" height="15" fill="rgb(227,7,12)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="191.50"></text></g><g><title>`0x7FFCD832ECE4 (1 samples, 0.06%)</title><rect x="99.5269%" y="165" width="0.0591%" height="15" fill="rgb(245,203,43)" fg:x="1683" fg:w="1"/><text x="99.7769%" y="175.50"></text></g><g><title>`0x7FFCD836389D (1 samples, 0.06%)</title><rect x="99.5860%" y="453" width="0.0591%" height="15" fill="rgb(238,205,33)" fg:x="1684" fg:w="1"/><text x="99.8360%" y="463.50"></text></g><g><title>`0x7FFCD82A7010 (1 samples, 0.06%)</title><rect x="99.5860%" y="437" width="0.0591%" height="15" fill="rgb(231,56,7)" fg:x="1684" fg:w="1"/><text x="99.8360%" y="447.50"></text></g><g><title>`0x7FFCD82AA7DD (1 samples, 0.06%)</title><rect x="99.5860%" y="421" width="0.0591%" height="15" fill="rgb(244,186,29)" fg:x="1684" fg:w="1"/><text x="99.8360%" y="431.50"></text></g><g><title>`0x7FFCD82AD7B1 (1 samples, 0.06%)</title><rect x="99.5860%" y="405" width="0.0591%" height="15" fill="rgb(234,111,31)" fg:x="1684" fg:w="1"/><text x="99.8360%" y="415.50"></text></g><g><title>`0x7FFCD83638B0 (1 samples, 0.06%)</title><rect x="99.6452%" y="453" width="0.0591%" height="15" fill="rgb(241,149,10)" fg:x="1685" fg:w="1"/><text x="99.8952%" y="463.50"></text></g><g><title>`0x7FFCD830C45F (1 samples, 0.06%)</title><rect x="99.6452%" y="437" width="0.0591%" height="15" fill="rgb(249,206,44)" fg:x="1685" fg:w="1"/><text x="99.8952%" y="447.50"></text></g><g><title>`0x7FFCD832D6D4 (1 samples, 0.06%)</title><rect x="99.6452%" y="421" width="0.0591%" height="15" fill="rgb(251,153,30)" fg:x="1685" fg:w="1"/><text x="99.8952%" y="431.50"></text></g><g><title>`0x7FFCD8363B6D (2 samples, 0.12%)</title><rect x="99.7043%" y="453" width="0.1183%" height="15" fill="rgb(239,152,38)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="463.50"></text></g><g><title>`0x7FFCD82A7B29 (2 samples, 0.12%)</title><rect x="99.7043%" y="437" width="0.1183%" height="15" fill="rgb(249,139,47)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="447.50"></text></g><g><title>`0x7FFCD82A88A8 (2 samples, 0.12%)</title><rect x="99.7043%" y="421" width="0.1183%" height="15" fill="rgb(244,64,35)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="431.50"></text></g><g><title>`0x7FFCD82A4479 (2 samples, 0.12%)</title><rect x="99.7043%" y="405" width="0.1183%" height="15" fill="rgb(216,46,15)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="415.50"></text></g><g><title>`0x7FFCD82A4AAA (2 samples, 0.12%)</title><rect x="99.7043%" y="389" width="0.1183%" height="15" fill="rgb(250,74,19)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="399.50"></text></g><g><title>`0x7FFCD82A4D42 (2 samples, 0.12%)</title><rect x="99.7043%" y="373" width="0.1183%" height="15" fill="rgb(249,42,33)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="383.50"></text></g><g><title>`0x7FFCD832D9F4 (2 samples, 0.12%)</title><rect x="99.7043%" y="357" width="0.1183%" height="15" fill="rgb(242,149,17)" fg:x="1686" fg:w="2"/><text x="99.9543%" y="367.50"></text></g><g><title>`0x7FFCD82FD08A (1 samples, 0.06%)</title><rect x="99.8226%" y="421" width="0.0591%" height="15" fill="rgb(244,29,21)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="431.50"></text></g><g><title>`0x7FFCD82FD2F7 (1 samples, 0.06%)</title><rect x="99.8226%" y="405" width="0.0591%" height="15" fill="rgb(220,130,37)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="415.50"></text></g><g><title>`0x7FFCD82A9A1D (1 samples, 0.06%)</title><rect x="99.8226%" y="389" width="0.0591%" height="15" fill="rgb(211,67,2)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="399.50"></text></g><g><title>`0x7FFCD5968C5E (1 samples, 0.06%)</title><rect x="99.8226%" y="373" width="0.0591%" height="15" fill="rgb(235,68,52)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="383.50"></text></g><g><title>`0x7FFCD59485FD (1 samples, 0.06%)</title><rect x="99.8226%" y="357" width="0.0591%" height="15" fill="rgb(246,142,3)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="367.50"></text></g><g><title>`0x7FFCD59488F1 (1 samples, 0.06%)</title><rect x="99.8226%" y="341" width="0.0591%" height="15" fill="rgb(241,25,7)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="351.50"></text></g><g><title>`0x7FFCD832D734 (1 samples, 0.06%)</title><rect x="99.8226%" y="325" width="0.0591%" height="15" fill="rgb(242,119,39)" fg:x="1688" fg:w="1"/><text x="100.0726%" y="335.50"></text></g><g><title>`0x7FFCD5DF710E (1 samples, 0.06%)</title><rect x="99.8817%" y="325" width="0.0591%" height="15" fill="rgb(241,98,45)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="335.50"></text></g><g><title>`0x7FFCD5DF7214 (1 samples, 0.06%)</title><rect x="99.8817%" y="309" width="0.0591%" height="15" fill="rgb(254,28,30)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="319.50"></text></g><g><title>`0x7FFCD5DF76CC (1 samples, 0.06%)</title><rect x="99.8817%" y="293" width="0.0591%" height="15" fill="rgb(241,142,54)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="303.50"></text></g><g><title>`0x7FFCD5DF7980 (1 samples, 0.06%)</title><rect x="99.8817%" y="277" width="0.0591%" height="15" fill="rgb(222,85,15)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="287.50"></text></g><g><title>`0x7FFCD5DF7B11 (1 samples, 0.06%)</title><rect x="99.8817%" y="261" width="0.0591%" height="15" fill="rgb(210,85,47)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="271.50"></text></g><g><title>`0x7FFCD5DF7F07 (1 samples, 0.06%)</title><rect x="99.8817%" y="245" width="0.0591%" height="15" fill="rgb(224,206,25)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="255.50"></text></g><g><title>`0x7FFCD5DF815F (1 samples, 0.06%)</title><rect x="99.8817%" y="229" width="0.0591%" height="15" fill="rgb(243,201,19)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="239.50"></text></g><g><title>`0x7FFCD5E0C050 (1 samples, 0.06%)</title><rect x="99.8817%" y="213" width="0.0591%" height="15" fill="rgb(236,59,4)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="223.50"></text></g><g><title>`0x7FFCD5FEDA58 (1 samples, 0.06%)</title><rect x="99.8817%" y="197" width="0.0591%" height="15" fill="rgb(254,179,45)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="207.50"></text></g><g><title>`0x7FFCD82AC270 (1 samples, 0.06%)</title><rect x="99.8817%" y="181" width="0.0591%" height="15" fill="rgb(226,14,10)" fg:x="1689" fg:w="1"/><text x="100.1317%" y="191.50"></text></g><g><title>all (1,691 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(244,27,41)" fg:x="0" fg:w="1691"/><text x="0.2500%" y="527.50"></text></g><g><title>`0x7FFCD8305C1E (15 samples, 0.89%)</title><rect x="99.1130%" y="501" width="0.8870%" height="15" fill="rgb(235,35,32)" fg:x="1676" fg:w="15"/><text x="99.3630%" y="511.50"></text></g><g><title>`0x7FFCD8305C73 (15 samples, 0.89%)</title><rect x="99.1130%" y="485" width="0.8870%" height="15" fill="rgb(218,68,31)" fg:x="1676" fg:w="15"/><text x="99.3630%" y="495.50"></text></g><g><title>`0x7FFCD8305DEB (15 samples, 0.89%)</title><rect x="99.1130%" y="469" width="0.8870%" height="15" fill="rgb(207,120,37)" fg:x="1676" fg:w="15"/><text x="99.3630%" y="479.50"></text></g><g><title>`0x7FFCD8363CB2 (3 samples, 0.18%)</title><rect x="99.8226%" y="453" width="0.1774%" height="15" fill="rgb(227,98,0)" fg:x="1688" fg:w="3"/><text x="100.0726%" y="463.50"></text></g><g><title>`0x7FFCD82FD110 (3 samples, 0.18%)</title><rect x="99.8226%" y="437" width="0.1774%" height="15" fill="rgb(207,7,3)" fg:x="1688" fg:w="3"/><text x="100.0726%" y="447.50"></text></g><g><title>`0x7FFCD82FD110 (2 samples, 0.12%)</title><rect x="99.8817%" y="421" width="0.1183%" height="15" fill="rgb(206,98,19)" fg:x="1689" fg:w="2"/><text x="100.1317%" y="431.50"></text></g><g><title>`0x7FFCD82FD08A (2 samples, 0.12%)</title><rect x="99.8817%" y="405" width="0.1183%" height="15" fill="rgb(217,5,26)" fg:x="1689" fg:w="2"/><text x="100.1317%" y="415.50"></text></g><g><title>`0x7FFCD82FD2F7 (2 samples, 0.12%)</title><rect x="99.8817%" y="389" width="0.1183%" height="15" fill="rgb(235,190,38)" fg:x="1689" fg:w="2"/><text x="100.1317%" y="399.50"></text></g><g><title>`0x7FFCD82A9A1D (2 samples, 0.12%)</title><rect x="99.8817%" y="373" width="0.1183%" height="15" fill="rgb(247,86,24)" fg:x="1689" fg:w="2"/><text x="100.1317%" y="383.50"></text></g><g><title>`0x7FFCD5E06216 (2 samples, 0.12%)</title><rect x="99.8817%" y="357" width="0.1183%" height="15" fill="rgb(205,101,16)" fg:x="1689" fg:w="2"/><text x="100.1317%" y="367.50"></text></g><g><title>`0x7FFCD5E07730 (2 samples, 0.12%)</title><rect x="99.8817%" y="341" width="0.1183%" height="15" fill="rgb(246,168,33)" fg:x="1689" fg:w="2"/><text x="100.1317%" y="351.50"></text></g><g><title>`0x7FFCD5E0F9C9 (1 samples, 0.06%)</title><rect x="99.9409%" y="325" width="0.0591%" height="15" fill="rgb(231,114,1)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="335.50"></text></g><g><title>`0x7FFCD5E0FA24 (1 samples, 0.06%)</title><rect x="99.9409%" y="309" width="0.0591%" height="15" fill="rgb(207,184,53)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="319.50"></text></g><g><title>`0x7FFCD5DFDC74 (1 samples, 0.06%)</title><rect x="99.9409%" y="293" width="0.0591%" height="15" fill="rgb(224,95,51)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="303.50"></text></g><g><title>`0x7FFCD5DFDD3E (1 samples, 0.06%)</title><rect x="99.9409%" y="277" width="0.0591%" height="15" fill="rgb(212,188,45)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="287.50"></text></g><g><title>`0x7FFCD82BB3C7 (1 samples, 0.06%)</title><rect x="99.9409%" y="261" width="0.0591%" height="15" fill="rgb(223,154,38)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="271.50"></text></g><g><title>`0x7FFCD82BBEDA (1 samples, 0.06%)</title><rect x="99.9409%" y="245" width="0.0591%" height="15" fill="rgb(251,22,52)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="255.50"></text></g><g><title>`0x7FFCD82B0B31 (1 samples, 0.06%)</title><rect x="99.9409%" y="229" width="0.0591%" height="15" fill="rgb(229,209,22)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="239.50"></text></g><g><title>`0x7FFCD82AF44F (1 samples, 0.06%)</title><rect x="99.9409%" y="213" width="0.0591%" height="15" fill="rgb(234,138,34)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="223.50"></text></g><g><title>`0x7FFCD82BB44D (1 samples, 0.06%)</title><rect x="99.9409%" y="197" width="0.0591%" height="15" fill="rgb(212,95,11)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="207.50"></text></g><g><title>`0x7FFCD82BDBFA (1 samples, 0.06%)</title><rect x="99.9409%" y="181" width="0.0591%" height="15" fill="rgb(240,179,47)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="191.50"></text></g><g><title>`0x7FFCD829E37B (1 samples, 0.06%)</title><rect x="99.9409%" y="165" width="0.0591%" height="15" fill="rgb(240,163,11)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="175.50"></text></g><g><title>`0x7FFCD829E7DE (1 samples, 0.06%)</title><rect x="99.9409%" y="149" width="0.0591%" height="15" fill="rgb(236,37,12)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="159.50"></text></g><g><title>`0x7FFCD829E990 (1 samples, 0.06%)</title><rect x="99.9409%" y="133" width="0.0591%" height="15" fill="rgb(232,164,16)" fg:x="1690" fg:w="1"/><text x="100.1909%" y="143.50"></text></g></svg></svg>