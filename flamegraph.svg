<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="585"><g><title>`0x7FF97E77CC70 (1 samples, 0.17%)</title><rect x="0.0000%" y="805" width="0.1709%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>`0x7FF97E793658 (1 samples, 0.17%)</title><rect x="0.1709%" y="757" width="0.1709%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.4209%" y="767.50"></text></g><g><title>`0x7FF97E750034 (1 samples, 0.17%)</title><rect x="0.1709%" y="741" width="0.1709%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.4209%" y="751.50"></text></g><g><title>`0x7FF97E742BD9 (1 samples, 0.17%)</title><rect x="0.1709%" y="725" width="0.1709%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.4209%" y="735.50"></text></g><g><title>`0x7FF97E7D0304 (1 samples, 0.17%)</title><rect x="0.1709%" y="709" width="0.1709%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.4209%" y="719.50"></text></g><g><title>`0x7FF97E7626C6 (1 samples, 0.17%)</title><rect x="0.3419%" y="709" width="0.1709%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.5919%" y="719.50"></text></g><g><title>`0x7FF97E790128 (2 samples, 0.34%)</title><rect x="0.3419%" y="725" width="0.3419%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="2"/><text x="0.5919%" y="735.50"></text></g><g><title>`0x7FF97E7627DA (1 samples, 0.17%)</title><rect x="0.5128%" y="709" width="0.1709%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.7628%" y="719.50"></text></g><g><title>`0x7FF97E7633D7 (1 samples, 0.17%)</title><rect x="0.5128%" y="693" width="0.1709%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.7628%" y="703.50"></text></g><g><title>`0x7FF97E747EC7 (1 samples, 0.17%)</title><rect x="0.5128%" y="677" width="0.1709%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.7628%" y="687.50"></text></g><g><title>`0x7FF97E74A7DD (1 samples, 0.17%)</title><rect x="0.5128%" y="661" width="0.1709%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.7628%" y="671.50"></text></g><g><title>`0x7FF97E74D77D (1 samples, 0.17%)</title><rect x="0.5128%" y="645" width="0.1709%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.7628%" y="655.50"></text></g><g><title>`0x7FF97E790BD6 (1 samples, 0.17%)</title><rect x="0.6838%" y="709" width="0.1709%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.9338%" y="719.50"></text></g><g><title>`0x7FF97E790516 (1 samples, 0.17%)</title><rect x="0.6838%" y="693" width="0.1709%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.9338%" y="703.50"></text></g><g><title>`0x7FF97E7906F7 (1 samples, 0.17%)</title><rect x="0.6838%" y="677" width="0.1709%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="0.9338%" y="687.50"></text></g><g><title>`0x7FF97E79086B (1 samples, 0.17%)</title><rect x="0.6838%" y="661" width="0.1709%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="0.9338%" y="671.50"></text></g><g><title>`0x7FF97E7CDC94 (1 samples, 0.17%)</title><rect x="0.6838%" y="645" width="0.1709%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.9338%" y="655.50"></text></g><g><title>`0x7FF97E77D79A (5 samples, 0.85%)</title><rect x="0.1709%" y="773" width="0.8547%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="5"/><text x="0.4209%" y="783.50"></text></g><g><title>`0x7FF97E793720 (4 samples, 0.68%)</title><rect x="0.3419%" y="757" width="0.6838%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="4"/><text x="0.5919%" y="767.50"></text></g><g><title>`0x7FF97E7900D3 (4 samples, 0.68%)</title><rect x="0.3419%" y="741" width="0.6838%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="4"/><text x="0.5919%" y="751.50"></text></g><g><title>`0x7FF97E790160 (2 samples, 0.34%)</title><rect x="0.6838%" y="725" width="0.3419%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="2"/><text x="0.9338%" y="735.50"></text></g><g><title>`0x7FF97E790CA0 (1 samples, 0.17%)</title><rect x="0.8547%" y="709" width="0.1709%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="1.1047%" y="719.50"></text></g><g><title>`0x7FF97E791243 (1 samples, 0.17%)</title><rect x="0.8547%" y="693" width="0.1709%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="1.1047%" y="703.50"></text></g><g><title>`0x7FF97E744C14 (1 samples, 0.17%)</title><rect x="0.8547%" y="677" width="0.1709%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="1.1047%" y="687.50"></text></g><g><title>`0x7FF97E747B29 (1 samples, 0.17%)</title><rect x="0.8547%" y="661" width="0.1709%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="1.1047%" y="671.50"></text></g><g><title>`0x7FF97E748AC1 (1 samples, 0.17%)</title><rect x="0.8547%" y="645" width="0.1709%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="1.1047%" y="655.50"></text></g><g><title>`0x7FF97BDEE4C3 (1 samples, 0.17%)</title><rect x="1.0256%" y="757" width="0.1709%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="1.2756%" y="767.50"></text></g><g><title>suballoc.exe`pre_c_initialization() (1 samples, 0.17%)</title><rect x="1.0256%" y="741" width="0.1709%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="1.2756%" y="751.50"></text></g><g><title>`0x7FF97BDD4518 (1 samples, 0.17%)</title><rect x="1.0256%" y="725" width="0.1709%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="1.2756%" y="735.50"></text></g><g><title>`0x7FF97BDF20C0 (1 samples, 0.17%)</title><rect x="1.0256%" y="709" width="0.1709%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="1.2756%" y="719.50"></text></g><g><title>`0x7FF97BDF21D8 (1 samples, 0.17%)</title><rect x="1.0256%" y="693" width="0.1709%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="1.2756%" y="703.50"></text></g><g><title>`0x7FF97BDF2256 (1 samples, 0.17%)</title><rect x="1.0256%" y="677" width="0.1709%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="1.2756%" y="687.50"></text></g><g><title>`0x7FF97BDEC050 (1 samples, 0.17%)</title><rect x="1.0256%" y="661" width="0.1709%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="1.2756%" y="671.50"></text></g><g><title>`0x7FF97C05DB72 (1 samples, 0.17%)</title><rect x="1.0256%" y="645" width="0.1709%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="1.2756%" y="655.50"></text></g><g><title>`0x7FF97E746AF4 (1 samples, 0.17%)</title><rect x="1.0256%" y="629" width="0.1709%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="1.2756%" y="639.50"></text></g><g><title>`0x7FF97E7473AD (1 samples, 0.17%)</title><rect x="1.0256%" y="613" width="0.1709%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="1.2756%" y="623.50"></text></g><g><title>`0x7FF97E74A3AC (1 samples, 0.17%)</title><rect x="1.0256%" y="597" width="0.1709%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="1.2756%" y="607.50"></text></g><g><title>`0x7FF97E74A613 (1 samples, 0.17%)</title><rect x="1.0256%" y="581" width="0.1709%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="1"/><text x="1.2756%" y="591.50"></text></g><g><title>`0x7FF97E74ACE8 (1 samples, 0.17%)</title><rect x="1.0256%" y="565" width="0.1709%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="1"/><text x="1.2756%" y="575.50"></text></g><g><title>`0x7FF97BDF19A9 (1 samples, 0.17%)</title><rect x="1.1966%" y="725" width="0.1709%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="1"/><text x="1.4466%" y="735.50"></text></g><g><title>`0x7FF97C0A8115 (1 samples, 0.17%)</title><rect x="1.1966%" y="709" width="0.1709%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="1.4466%" y="719.50"></text></g><g><title>`0x7FF97C0A8168 (1 samples, 0.17%)</title><rect x="1.1966%" y="693" width="0.1709%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="1.4466%" y="703.50"></text></g><g><title>`0x7FF97C0A580E (1 samples, 0.17%)</title><rect x="1.1966%" y="677" width="0.1709%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="1.4466%" y="687.50"></text></g><g><title>`0x7FF97E79AB0C (1 samples, 0.17%)</title><rect x="1.1966%" y="661" width="0.1709%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="1"/><text x="1.4466%" y="671.50"></text></g><g><title>`0x7FF97E79ACD6 (1 samples, 0.17%)</title><rect x="1.1966%" y="645" width="0.1709%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="1"/><text x="1.4466%" y="655.50"></text></g><g><title>`0x7FF97E7D0044 (1 samples, 0.17%)</title><rect x="1.1966%" y="629" width="0.1709%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="1"/><text x="1.4466%" y="639.50"></text></g><g><title>`0x7FF97E790F02 (1 samples, 0.17%)</title><rect x="1.3675%" y="613" width="0.1709%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="1.6175%" y="623.50"></text></g><g><title>`0x7FF97E7906F7 (1 samples, 0.17%)</title><rect x="1.3675%" y="597" width="0.1709%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="1.6175%" y="607.50"></text></g><g><title>`0x7FF97E79086B (1 samples, 0.17%)</title><rect x="1.3675%" y="581" width="0.1709%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="1"/><text x="1.6175%" y="591.50"></text></g><g><title>`0x7FF97E7CDC94 (1 samples, 0.17%)</title><rect x="1.3675%" y="565" width="0.1709%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="1.6175%" y="575.50"></text></g><g><title>`0x7FF97E744AAA (1 samples, 0.17%)</title><rect x="1.5385%" y="581" width="0.1709%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="1.7885%" y="591.50"></text></g><g><title>`0x7FF97E744D42 (1 samples, 0.17%)</title><rect x="1.5385%" y="565" width="0.1709%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="1.7885%" y="575.50"></text></g><g><title>`0x7FF97E7CD9F4 (1 samples, 0.17%)</title><rect x="1.5385%" y="549" width="0.1709%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="1.7885%" y="559.50"></text></g><g><title>`0x7FF97E747B29 (1 samples, 0.17%)</title><rect x="1.7094%" y="565" width="0.1709%" height="15" fill="rgb(231,138,38)" fg:x="10" fg:w="1"/><text x="1.9594%" y="575.50"></text></g><g><title>`0x7FF97E7488A8 (1 samples, 0.17%)</title><rect x="1.7094%" y="549" width="0.1709%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="1"/><text x="1.9594%" y="559.50"></text></g><g><title>`0x7FF97E744479 (1 samples, 0.17%)</title><rect x="1.7094%" y="533" width="0.1709%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="1.9594%" y="543.50"></text></g><g><title>`0x7FF97E744C14 (1 samples, 0.17%)</title><rect x="1.7094%" y="517" width="0.1709%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="1.9594%" y="527.50"></text></g><g><title>`0x7FF97E747B29 (1 samples, 0.17%)</title><rect x="1.7094%" y="501" width="0.1709%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="1.9594%" y="511.50"></text></g><g><title>`0x7FF97E747EC7 (1 samples, 0.17%)</title><rect x="1.7094%" y="485" width="0.1709%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="1.9594%" y="495.50"></text></g><g><title>`0x7FF97E74A7DD (1 samples, 0.17%)</title><rect x="1.7094%" y="469" width="0.1709%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="1.9594%" y="479.50"></text></g><g><title>`0x7FF97E74D781 (1 samples, 0.17%)</title><rect x="1.7094%" y="453" width="0.1709%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="1.9594%" y="463.50"></text></g><g><title>`0x7FF97E74FB53 (4 samples, 0.68%)</title><rect x="1.3675%" y="645" width="0.6838%" height="15" fill="rgb(221,10,30)" fg:x="8" fg:w="4"/><text x="1.6175%" y="655.50"></text></g><g><title>`0x7FF97E79020F (4 samples, 0.68%)</title><rect x="1.3675%" y="629" width="0.6838%" height="15" fill="rgb(210,229,1)" fg:x="8" fg:w="4"/><text x="1.6175%" y="639.50"></text></g><g><title>`0x7FF97E790F70 (3 samples, 0.51%)</title><rect x="1.5385%" y="613" width="0.5128%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="3"/><text x="1.7885%" y="623.50"></text></g><g><title>`0x7FF97E791243 (3 samples, 0.51%)</title><rect x="1.5385%" y="597" width="0.5128%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="3"/><text x="1.7885%" y="607.50"></text></g><g><title>`0x7FF97E744C14 (2 samples, 0.34%)</title><rect x="1.7094%" y="581" width="0.3419%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="2"/><text x="1.9594%" y="591.50"></text></g><g><title>`0x7FF97E747BC4 (1 samples, 0.17%)</title><rect x="1.8803%" y="565" width="0.1709%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="2.1303%" y="575.50"></text></g><g><title>`0x7FF97E762714 (1 samples, 0.17%)</title><rect x="1.8803%" y="549" width="0.1709%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="2.1303%" y="559.50"></text></g><g><title>`0x7FF97DD278CA (1 samples, 0.17%)</title><rect x="2.0513%" y="549" width="0.1709%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="2.3013%" y="559.50"></text></g><g><title>`0x7FF97DD509B1 (1 samples, 0.17%)</title><rect x="2.0513%" y="533" width="0.1709%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="2.3013%" y="543.50"></text></g><g><title>`0x7FF97E7547B1 (1 samples, 0.17%)</title><rect x="2.0513%" y="517" width="0.1709%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="2.3013%" y="527.50"></text></g><g><title>`0x7FF97E755B74 (1 samples, 0.17%)</title><rect x="2.0513%" y="501" width="0.1709%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="2.3013%" y="511.50"></text></g><g><title>`0x7FF97E7565F6 (1 samples, 0.17%)</title><rect x="2.0513%" y="485" width="0.1709%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="2.3013%" y="495.50"></text></g><g><title>`0x7FF97E74E412 (1 samples, 0.17%)</title><rect x="2.0513%" y="469" width="0.1709%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="2.3013%" y="479.50"></text></g><g><title>`0x7FF97E74F35E (1 samples, 0.17%)</title><rect x="2.0513%" y="453" width="0.1709%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="2.3013%" y="463.50"></text></g><g><title>`0x7FF97E75095C (1 samples, 0.17%)</title><rect x="2.0513%" y="437" width="0.1709%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="2.3013%" y="447.50"></text></g><g><title>`0x7FF97E739B1A (1 samples, 0.17%)</title><rect x="2.0513%" y="421" width="0.1709%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="2.3013%" y="431.50"></text></g><g><title>`0x7FF97E7CD8B4 (1 samples, 0.17%)</title><rect x="2.0513%" y="405" width="0.1709%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="2.3013%" y="415.50"></text></g><g><title>`0x7FF97BDF045F (7 samples, 1.20%)</title><rect x="1.1966%" y="757" width="1.1966%" height="15" fill="rgb(236,212,23)" fg:x="7" fg:w="7"/><text x="1.4466%" y="767.50"></text></g><g><title>`0x7FF97BDF05A2 (7 samples, 1.20%)</title><rect x="1.1966%" y="741" width="1.1966%" height="15" fill="rgb(242,79,21)" fg:x="7" fg:w="7"/><text x="1.4466%" y="751.50"></text></g><g><title>`0x7FF97BDF19C7 (6 samples, 1.03%)</title><rect x="1.3675%" y="725" width="1.0256%" height="15" fill="rgb(211,96,35)" fg:x="8" fg:w="6"/><text x="1.6175%" y="735.50"></text></g><g><title>`0x7FF97BDEC050 (6 samples, 1.03%)</title><rect x="1.3675%" y="709" width="1.0256%" height="15" fill="rgb(253,215,40)" fg:x="8" fg:w="6"/><text x="1.6175%" y="719.50"></text></g><g><title>`0x7FF97C05DB72 (6 samples, 1.03%)</title><rect x="1.3675%" y="693" width="1.0256%" height="15" fill="rgb(211,81,21)" fg:x="8" fg:w="6"/><text x="1.6175%" y="703.50"></text></g><g><title>`0x7FF97E746AF4 (6 samples, 1.03%)</title><rect x="1.3675%" y="677" width="1.0256%" height="15" fill="rgb(208,190,38)" fg:x="8" fg:w="6"/><text x="1.6175%" y="687.50"></text></g><g><title>`0x7FF97E7473E4 (6 samples, 1.03%)</title><rect x="1.3675%" y="661" width="1.0256%" height="15" fill="rgb(235,213,38)" fg:x="8" fg:w="6"/><text x="1.6175%" y="671.50"></text></g><g><title>`0x7FF97E74FBAE (2 samples, 0.34%)</title><rect x="2.0513%" y="645" width="0.3419%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="2"/><text x="2.3013%" y="655.50"></text></g><g><title>`0x7FF97E76D947 (2 samples, 0.34%)</title><rect x="2.0513%" y="629" width="0.3419%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="2"/><text x="2.3013%" y="639.50"></text></g><g><title>`0x7FF97E79D110 (2 samples, 0.34%)</title><rect x="2.0513%" y="613" width="0.3419%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="2"/><text x="2.3013%" y="623.50"></text></g><g><title>`0x7FF97E79D08A (2 samples, 0.34%)</title><rect x="2.0513%" y="597" width="0.3419%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="2"/><text x="2.3013%" y="607.50"></text></g><g><title>`0x7FF97E79D2F7 (2 samples, 0.34%)</title><rect x="2.0513%" y="581" width="0.3419%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="2"/><text x="2.3013%" y="591.50"></text></g><g><title>`0x7FF97E749A1D (2 samples, 0.34%)</title><rect x="2.0513%" y="565" width="0.3419%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="2"/><text x="2.3013%" y="575.50"></text></g><g><title>`0x7FF97DD278EF (1 samples, 0.17%)</title><rect x="2.2222%" y="549" width="0.1709%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="2.4722%" y="559.50"></text></g><g><title>`0x7FF97DD40AAE (1 samples, 0.17%)</title><rect x="2.2222%" y="533" width="0.1709%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="2.4722%" y="543.50"></text></g><g><title>`0x7FF97DD40C20 (1 samples, 0.17%)</title><rect x="2.2222%" y="517" width="0.1709%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="2.4722%" y="527.50"></text></g><g><title>`0x7FF97DD39F44 (1 samples, 0.17%)</title><rect x="2.2222%" y="501" width="0.1709%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="2.4722%" y="511.50"></text></g><g><title>`0x7FF97DD39D40 (1 samples, 0.17%)</title><rect x="2.2222%" y="485" width="0.1709%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="2.4722%" y="495.50"></text></g><g><title>`0x7FF97E75B44D (1 samples, 0.17%)</title><rect x="2.2222%" y="469" width="0.1709%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="2.4722%" y="479.50"></text></g><g><title>`0x7FF97E75F1BE (1 samples, 0.17%)</title><rect x="2.2222%" y="453" width="0.1709%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="1"/><text x="2.4722%" y="463.50"></text></g><g><title>`0x7FF97E7D4466 (1 samples, 0.17%)</title><rect x="3.5897%" y="421" width="0.1709%" height="15" fill="rgb(233,208,19)" fg:x="21" fg:w="1"/><text x="3.8397%" y="431.50"></text></g><g><title>`0x7FF97E7527D9 (5 samples, 0.85%)</title><rect x="3.5897%" y="437" width="0.8547%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="5"/><text x="3.8397%" y="447.50"></text></g><g><title>`0x7FF97E7D4513 (4 samples, 0.68%)</title><rect x="3.7607%" y="421" width="0.6838%" height="15" fill="rgb(220,129,5)" fg:x="22" fg:w="4"/><text x="4.0107%" y="431.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (7 samples, 1.20%)</title><rect x="3.5897%" y="661" width="1.1966%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="7"/><text x="3.8397%" y="671.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (7 samples, 1.20%)</title><rect x="3.5897%" y="645" width="1.1966%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="7"/><text x="3.8397%" y="655.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (7 samples, 1.20%)</title><rect x="3.5897%" y="629" width="1.1966%" height="15" fill="rgb(251,28,31)" fg:x="21" fg:w="7"/><text x="3.8397%" y="639.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (7 samples, 1.20%)</title><rect x="3.5897%" y="613" width="1.1966%" height="15" fill="rgb(233,223,10)" fg:x="21" fg:w="7"/><text x="3.8397%" y="623.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::grow_one&lt;u32,alloc::alloc::Global&gt; (7 samples, 1.20%)</title><rect x="3.5897%" y="597" width="1.1966%" height="15" fill="rgb(215,21,27)" fg:x="21" fg:w="7"/><text x="3.8397%" y="607.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (7 samples, 1.20%)</title><rect x="3.5897%" y="581" width="1.1966%" height="15" fill="rgb(232,23,21)" fg:x="21" fg:w="7"/><text x="3.8397%" y="591.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (7 samples, 1.20%)</title><rect x="3.5897%" y="565" width="1.1966%" height="15" fill="rgb(244,5,23)" fg:x="21" fg:w="7"/><text x="3.8397%" y="575.50"></text></g><g><title>suballoc.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (7 samples, 1.20%)</title><rect x="3.5897%" y="549" width="1.1966%" height="15" fill="rgb(226,81,46)" fg:x="21" fg:w="7"/><text x="3.8397%" y="559.50"></text></g><g><title>suballoc.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (7 samples, 1.20%)</title><rect x="3.5897%" y="533" width="1.1966%" height="15" fill="rgb(247,70,30)" fg:x="21" fg:w="7"/><text x="3.8397%" y="543.50"></text></g><g><title>suballoc.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (7 samples, 1.20%)</title><rect x="3.5897%" y="517" width="1.1966%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="7"/><text x="3.8397%" y="527.50"></text></g><g><title>suballoc.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (7 samples, 1.20%)</title><rect x="3.5897%" y="501" width="1.1966%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="7"/><text x="3.8397%" y="511.50"></text></g><g><title>suballoc.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (7 samples, 1.20%)</title><rect x="3.5897%" y="485" width="1.1966%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="7"/><text x="3.8397%" y="495.50"></text></g><g><title>`0x7FF97E7536BD (7 samples, 1.20%)</title><rect x="3.5897%" y="469" width="1.1966%" height="15" fill="rgb(206,192,2)" fg:x="21" fg:w="7"/><text x="3.8397%" y="479.50"></text></g><g><title>`0x7FF97E7538E3 (7 samples, 1.20%)</title><rect x="3.5897%" y="453" width="1.1966%" height="15" fill="rgb(241,108,4)" fg:x="21" fg:w="7"/><text x="3.8397%" y="463.50"></text></g><g><title>`0x7FF97E7527F0 (2 samples, 0.34%)</title><rect x="4.4444%" y="437" width="0.3419%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="2"/><text x="4.6944%" y="447.50"></text></g><g><title>`0x7FF97E7547B1 (2 samples, 0.34%)</title><rect x="4.4444%" y="421" width="0.3419%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="2"/><text x="4.6944%" y="431.50"></text></g><g><title>`0x7FF97E755B74 (2 samples, 0.34%)</title><rect x="4.4444%" y="405" width="0.3419%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="2"/><text x="4.6944%" y="415.50"></text></g><g><title>`0x7FF97E756F37 (2 samples, 0.34%)</title><rect x="4.4444%" y="389" width="0.3419%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="2"/><text x="4.6944%" y="399.50"></text></g><g><title>`0x7FF97E739B1A (2 samples, 0.34%)</title><rect x="4.4444%" y="373" width="0.3419%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="2"/><text x="4.6944%" y="383.50"></text></g><g><title>`0x7FF97E7CD8B4 (2 samples, 0.34%)</title><rect x="4.4444%" y="357" width="0.3419%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="2"/><text x="4.6944%" y="367.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (16 samples, 2.74%)</title><rect x="2.5641%" y="677" width="2.7350%" height="15" fill="rgb(237,72,25)" fg:x="15" fg:w="16"/><text x="2.8141%" y="687.50">su..</text></g><g><title>suballoc.exe`core::ptr::write (3 samples, 0.51%)</title><rect x="4.7863%" y="661" width="0.5128%" height="15" fill="rgb(244,70,9)" fg:x="28" fg:w="3"/><text x="5.0363%" y="671.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::set_len (1 samples, 0.17%)</title><rect x="5.8120%" y="661" width="0.1709%" height="15" fill="rgb(217,125,39)" fg:x="34" fg:w="1"/><text x="6.0620%" y="671.50"></text></g><g><title>suballoc.exe`core::ptr::copy (54 samples, 9.23%)</title><rect x="5.9829%" y="661" width="9.2308%" height="15" fill="rgb(235,36,10)" fg:x="35" fg:w="54"/><text x="6.2329%" y="671.50">suballoc.exe`..</text></g><g><title>suballoc.exe`chacha20::ChaChaCore&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::generate&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt; (3 samples, 0.51%)</title><rect x="20.0000%" y="453" width="0.5128%" height="15" fill="rgb(251,123,47)" fg:x="117" fg:w="3"/><text x="20.2500%" y="463.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.17%)</title><rect x="20.6838%" y="373" width="0.1709%" height="15" fill="rgb(221,13,13)" fg:x="121" fg:w="1"/><text x="20.9338%" y="383.50"></text></g><g><title>suballoc.exe`chacha20::rng::impl$42::generate (8 samples, 1.37%)</title><rect x="20.0000%" y="469" width="1.3675%" height="15" fill="rgb(238,131,9)" fg:x="117" fg:w="8"/><text x="20.2500%" y="479.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::rng_inner&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;(chacha20::ChaChaCore&lt;chacha20::R12,enum2$ (5 samples, 0.85%)</title><rect x="20.5128%" y="453" width="0.8547%" height="15" fill="rgb(211,50,8)" fg:x="120" fg:w="5"/><text x="20.7628%" y="463.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::Backend&lt;chacha20::R12,enum2$&lt;chacha20::variants::Legacy&gt; &gt;::rng_gen_par_ks_blocks (4 samples, 0.68%)</title><rect x="20.6838%" y="437" width="0.6838%" height="15" fill="rgb(245,182,24)" fg:x="121" fg:w="4"/><text x="20.9338%" y="447.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::rounds (4 samples, 0.68%)</title><rect x="20.6838%" y="421" width="0.6838%" height="15" fill="rgb(242,14,37)" fg:x="121" fg:w="4"/><text x="20.9338%" y="431.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::double_quarter_round (4 samples, 0.68%)</title><rect x="20.6838%" y="405" width="0.6838%" height="15" fill="rgb(246,228,12)" fg:x="121" fg:w="4"/><text x="20.9338%" y="415.50"></text></g><g><title>suballoc.exe`chacha20::backends::avx2::add_xor_rot (4 samples, 0.68%)</title><rect x="20.6838%" y="389" width="0.6838%" height="15" fill="rgb(213,55,15)" fg:x="121" fg:w="4"/><text x="20.9338%" y="399.50"></text></g><g><title>suballoc.exe`core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.51%)</title><rect x="20.8547%" y="373" width="0.5128%" height="15" fill="rgb(209,9,3)" fg:x="122" fg:w="3"/><text x="21.1047%" y="383.50"></text></g><g><title>suballoc.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::swap_remove (95 samples, 16.24%)</title><rect x="5.2991%" y="677" width="16.2393%" height="15" fill="rgb(230,59,30)" fg:x="31" fg:w="95"/><text x="5.5491%" y="687.50">suballoc.exe`alloc::vec::..</text></g><g><title>suballoc.exe`rand::rng::Rng::random_range&lt;rand::rngs::thread::ThreadRng,usize,core::ops::range::Range&lt;usize&gt; &gt;(rand::rngs::thread::ThreadRng*, core::ops::range::Range (37 samples, 6.32%)</title><rect x="15.2137%" y="661" width="6.3248%" height="15" fill="rgb(209,121,21)" fg:x="89" fg:w="37"/><text x="15.4637%" y="671.50">suballoc..</text></g><g><title>suballoc.exe`rand::distr::uniform::impl$8::sample_single(core::ops::range::Range (11 samples, 1.88%)</title><rect x="19.6581%" y="645" width="1.8803%" height="15" fill="rgb(220,109,13)" fg:x="115" fg:w="11"/><text x="19.9081%" y="655.50">s..</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$1::sample_single (11 samples, 1.88%)</title><rect x="19.6581%" y="629" width="1.8803%" height="15" fill="rgb(232,18,1)" fg:x="115" fg:w="11"/><text x="19.9081%" y="639.50">s..</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$23::sample_single (11 samples, 1.88%)</title><rect x="19.6581%" y="613" width="1.8803%" height="15" fill="rgb(215,41,42)" fg:x="115" fg:w="11"/><text x="19.9081%" y="623.50">s..</text></g><g><title>suballoc.exe`rand::distr::uniform::int::impl$23::sample_single_inclusive (11 samples, 1.88%)</title><rect x="19.6581%" y="597" width="1.8803%" height="15" fill="rgb(224,123,36)" fg:x="115" fg:w="11"/><text x="19.9081%" y="607.50">s..</text></g><g><title>suballoc.exe`rand::rng::Rng::random (11 samples, 1.88%)</title><rect x="19.6581%" y="581" width="1.8803%" height="15" fill="rgb(240,125,3)" fg:x="115" fg:w="11"/><text x="19.9081%" y="591.50">s..</text></g><g><title>suballoc.exe`rand::distr::integer::impl$2::sample (11 samples, 1.88%)</title><rect x="19.6581%" y="565" width="1.8803%" height="15" fill="rgb(205,98,50)" fg:x="115" fg:w="11"/><text x="19.9081%" y="575.50">s..</text></g><g><title>suballoc.exe`rand::rngs::thread::impl$3::next_u32 (11 samples, 1.88%)</title><rect x="19.6581%" y="549" width="1.8803%" height="15" fill="rgb(205,185,37)" fg:x="115" fg:w="11"/><text x="19.9081%" y="559.50">s..</text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$1::next_u32(rand::rngs::reseeding::ReseedingRng (11 samples, 1.88%)</title><rect x="19.6581%" y="533" width="1.8803%" height="15" fill="rgb(238,207,15)" fg:x="115" fg:w="11"/><text x="19.9081%" y="543.50">s..</text></g><g><title>suballoc.exe`rand_core::block::impl$2::next_u32(rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore (11 samples, 1.88%)</title><rect x="19.6581%" y="517" width="1.8803%" height="15" fill="rgb(213,199,42)" fg:x="115" fg:w="11"/><text x="19.9081%" y="527.50">s..</text></g><g><title>suballoc.exe`rand_core::block::BlockRng&lt;rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; &gt;::generate_and_set (9 samples, 1.54%)</title><rect x="20.0000%" y="501" width="1.5385%" height="15" fill="rgb(235,201,11)" fg:x="117" fg:w="9"/><text x="20.2500%" y="511.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::impl$4::generate(rand::rngs::reseeding::ReseedingCore (9 samples, 1.54%)</title><rect x="20.0000%" y="485" width="1.5385%" height="15" fill="rgb(207,46,11)" fg:x="117" fg:w="9"/><text x="20.2500%" y="495.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt;::reseed_and_generate&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt; (1 samples, 0.17%)</title><rect x="21.3675%" y="469" width="0.1709%" height="15" fill="rgb(241,35,35)" fg:x="125" fg:w="1"/><text x="21.6175%" y="479.50"></text></g><g><title>suballoc.exe`rand::rngs::reseeding::ReseedingCore&lt;chacha20::rng::ChaCha12Core,rand_core::os::OsRng&gt;::reseed (1 samples, 0.17%)</title><rect x="21.3675%" y="453" width="0.1709%" height="15" fill="rgb(243,32,47)" fg:x="125" fg:w="1"/><text x="21.6175%" y="463.50"></text></g><g><title>suballoc.exe`rand_core::SeedableRng::try_from_rng (1 samples, 0.17%)</title><rect x="21.3675%" y="437" width="0.1709%" height="15" fill="rgb(247,202,23)" fg:x="125" fg:w="1"/><text x="21.6175%" y="447.50"></text></g><g><title>`0x7FF97BF1513C (1 samples, 0.17%)</title><rect x="21.3675%" y="421" width="0.1709%" height="15" fill="rgb(219,102,11)" fg:x="125" fg:w="1"/><text x="21.6175%" y="431.50"></text></g><g><title>`0x7FF97BF153DF (1 samples, 0.17%)</title><rect x="21.3675%" y="405" width="0.1709%" height="15" fill="rgb(243,110,44)" fg:x="125" fg:w="1"/><text x="21.6175%" y="415.50"></text></g><g><title>`0x7FF97BF16849 (1 samples, 0.17%)</title><rect x="21.3675%" y="389" width="0.1709%" height="15" fill="rgb(222,74,54)" fg:x="125" fg:w="1"/><text x="21.6175%" y="399.50"></text></g><g><title>`0x7FF97BF16939 (1 samples, 0.17%)</title><rect x="21.3675%" y="373" width="0.1709%" height="15" fill="rgb(216,99,12)" fg:x="125" fg:w="1"/><text x="21.6175%" y="383.50"></text></g><g><title>`0x7FF97BF16A14 (1 samples, 0.17%)</title><rect x="21.3675%" y="357" width="0.1709%" height="15" fill="rgb(226,22,26)" fg:x="125" fg:w="1"/><text x="21.6175%" y="367.50"></text></g><g><title>`0x7FF97E7D46A8 (1 samples, 0.17%)</title><rect x="21.3675%" y="341" width="0.1709%" height="15" fill="rgb(217,163,10)" fg:x="125" fg:w="1"/><text x="21.6175%" y="351.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_prev_free (3 samples, 0.51%)</title><rect x="26.4957%" y="645" width="0.5128%" height="15" fill="rgb(213,25,53)" fg:x="155" fg:w="3"/><text x="26.7457%" y="655.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::block_is_last (197 samples, 33.68%)</title><rect x="27.0085%" y="645" width="33.6752%" height="15" fill="rgb(252,105,26)" fg:x="158" fg:w="197"/><text x="27.2585%" y="655.50">suballoc.exe`suballoc::tlsf::TLSF::block_is_last</text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (195 samples, 33.33%)</title><rect x="27.3504%" y="629" width="33.3333%" height="15" fill="rgb(220,39,43)" fg:x="160" fg:w="195"/><text x="27.6004%" y="639.50">suballoc.exe`suballoc::block::BlockInterface::size</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::head_from_tail (11 samples, 1.88%)</title><rect x="60.6838%" y="645" width="1.8803%" height="15" fill="rgb(229,68,48)" fg:x="355" fg:w="11"/><text x="60.9338%" y="655.50">s..</text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (11 samples, 1.88%)</title><rect x="60.6838%" y="629" width="1.8803%" height="15" fill="rgb(252,8,32)" fg:x="355" fg:w="11"/><text x="60.9338%" y="639.50">s..</text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (1 samples, 0.17%)</title><rect x="62.7350%" y="629" width="0.1709%" height="15" fill="rgb(223,20,43)" fg:x="367" fg:w="1"/><text x="62.9850%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::mapping_insert (4 samples, 0.68%)</title><rect x="62.5641%" y="645" width="0.6838%" height="15" fill="rgb(229,81,49)" fg:x="366" fg:w="4"/><text x="62.8141%" y="655.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::calc_sl_index_for_fl (2 samples, 0.34%)</title><rect x="62.9060%" y="629" width="0.3419%" height="15" fill="rgb(236,28,36)" fg:x="368" fg:w="2"/><text x="63.1560%" y="639.50"></text></g><g><title>suballoc.exe`enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (4 samples, 0.68%)</title><rect x="63.2479%" y="629" width="0.6838%" height="15" fill="rgb(249,185,26)" fg:x="370" fg:w="4"/><text x="63.4979%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::block::FreeBlockInterface::set_next(suballoc::block::FreeBlockHead*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (2 samples, 0.34%)</title><rect x="63.9316%" y="629" width="0.3419%" height="15" fill="rgb(249,174,33)" fg:x="374" fg:w="2"/><text x="64.1816%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::mapping_insert (2 samples, 0.34%)</title><rect x="64.2735%" y="629" width="0.3419%" height="15" fill="rgb(233,201,37)" fg:x="376" fg:w="2"/><text x="64.5235%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::calc_sl_index_for_fl (2 samples, 0.34%)</title><rect x="64.2735%" y="613" width="0.3419%" height="15" fill="rgb(221,78,26)" fg:x="376" fg:w="2"/><text x="64.5235%" y="623.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::pushf_free_link(core::ptr::non_null::NonNull (11 samples, 1.88%)</title><rect x="63.2479%" y="645" width="1.8803%" height="15" fill="rgb(250,127,30)" fg:x="370" fg:w="11"/><text x="63.4979%" y="655.50">s..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::set_bitmap_index_available (3 samples, 0.51%)</title><rect x="64.6154%" y="629" width="0.5128%" height="15" fill="rgb(230,49,44)" fg:x="378" fg:w="3"/><text x="64.8654%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::remove_free_link (27 samples, 4.62%)</title><rect x="65.1282%" y="645" width="4.6154%" height="15" fill="rgb(229,67,23)" fg:x="381" fg:w="27"/><text x="65.3782%" y="655.50">subal..</text></g><g><title>suballoc.exe`core::hint::black_box(tuple$ (286 samples, 48.89%)</title><rect x="21.5385%" y="677" width="48.8889%" height="15" fill="rgb(249,83,47)" fg:x="126" fg:w="286"/><text x="21.7885%" y="687.50">suballoc.exe`core::hint::black_box(tuple$</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::deallocate (285 samples, 48.72%)</title><rect x="21.7094%" y="661" width="48.7179%" height="15" fill="rgb(215,43,3)" fg:x="127" fg:w="285"/><text x="21.9594%" y="671.50">suballoc.exe`suballoc::tlsf::TLSF::deallocate</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::tail_from_head (4 samples, 0.68%)</title><rect x="69.7436%" y="645" width="0.6838%" height="15" fill="rgb(238,154,13)" fg:x="408" fg:w="4"/><text x="69.9936%" y="655.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (4 samples, 0.68%)</title><rect x="69.7436%" y="629" width="0.6838%" height="15" fill="rgb(219,56,2)" fg:x="408" fg:w="4"/><text x="69.9936%" y="639.50"></text></g><g><title>`0x7FF97E7547B1 (1 samples, 0.17%)</title><rect x="70.4274%" y="149" width="0.1709%" height="15" fill="rgb(233,0,4)" fg:x="412" fg:w="1"/><text x="70.6774%" y="159.50"></text></g><g><title>`0x7FF97E755B74 (1 samples, 0.17%)</title><rect x="70.4274%" y="133" width="0.1709%" height="15" fill="rgb(235,30,7)" fg:x="412" fg:w="1"/><text x="70.6774%" y="143.50"></text></g><g><title>`0x7FF97E756F37 (1 samples, 0.17%)</title><rect x="70.4274%" y="117" width="0.1709%" height="15" fill="rgb(250,79,13)" fg:x="412" fg:w="1"/><text x="70.6774%" y="127.50"></text></g><g><title>`0x7FF97E739B1A (1 samples, 0.17%)</title><rect x="70.4274%" y="101" width="0.1709%" height="15" fill="rgb(211,146,34)" fg:x="412" fg:w="1"/><text x="70.6774%" y="111.50"></text></g><g><title>`0x7FF97E7CD8B4 (1 samples, 0.17%)</title><rect x="70.4274%" y="85" width="0.1709%" height="15" fill="rgb(228,22,38)" fg:x="412" fg:w="1"/><text x="70.6774%" y="95.50"></text></g><g><title>suballoc.exe`enum2$&lt;core::result::Result&lt;u32,suballoc::tlsf::AllocError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (2 samples, 0.34%)</title><rect x="70.4274%" y="677" width="0.3419%" height="15" fill="rgb(235,168,5)" fg:x="412" fg:w="2"/><text x="70.6774%" y="687.50"></text></g><g><title>suballoc.exe`core::result::unwrap_failed (2 samples, 0.34%)</title><rect x="70.4274%" y="661" width="0.3419%" height="15" fill="rgb(221,155,16)" fg:x="412" fg:w="2"/><text x="70.6774%" y="671.50"></text></g><g><title>suballoc.exe`core::panicking::panic_fmt (2 samples, 0.34%)</title><rect x="70.4274%" y="645" width="0.3419%" height="15" fill="rgb(215,215,53)" fg:x="412" fg:w="2"/><text x="70.6774%" y="655.50"></text></g><g><title>suballoc.exe`std::panicking::begin_panic_handler (2 samples, 0.34%)</title><rect x="70.4274%" y="629" width="0.3419%" height="15" fill="rgb(223,4,10)" fg:x="412" fg:w="2"/><text x="70.6774%" y="639.50"></text></g><g><title>suballoc.exe`std::sys::backtrace::__rust_end_short_backtrace&lt;std::panicking::begin_panic_handler::closure_env$0,never$&gt; (2 samples, 0.34%)</title><rect x="70.4274%" y="613" width="0.3419%" height="15" fill="rgb(234,103,6)" fg:x="412" fg:w="2"/><text x="70.6774%" y="623.50"></text></g><g><title>suballoc.exe`std::panicking::begin_panic_handler::closure$0 (2 samples, 0.34%)</title><rect x="70.4274%" y="597" width="0.3419%" height="15" fill="rgb(227,97,0)" fg:x="412" fg:w="2"/><text x="70.6774%" y="607.50"></text></g><g><title>suballoc.exe`std::panicking::rust_panic_with_hook (2 samples, 0.34%)</title><rect x="70.4274%" y="581" width="0.3419%" height="15" fill="rgb(234,150,53)" fg:x="412" fg:w="2"/><text x="70.6774%" y="591.50"></text></g><g><title>suballoc.exe`std::panicking::default_hook (2 samples, 0.34%)</title><rect x="70.4274%" y="565" width="0.3419%" height="15" fill="rgb(228,201,54)" fg:x="412" fg:w="2"/><text x="70.6774%" y="575.50"></text></g><g><title>suballoc.exe`std::panicking::payload_as_str (2 samples, 0.34%)</title><rect x="70.4274%" y="549" width="0.3419%" height="15" fill="rgb(222,22,37)" fg:x="412" fg:w="2"/><text x="70.6774%" y="559.50"></text></g><g><title>suballoc.exe`core::any::impl$4::downcast_ref (2 samples, 0.34%)</title><rect x="70.4274%" y="533" width="0.3419%" height="15" fill="rgb(237,53,32)" fg:x="412" fg:w="2"/><text x="70.6774%" y="543.50"></text></g><g><title>suballoc.exe`core::any::impl$4::is (2 samples, 0.34%)</title><rect x="70.4274%" y="517" width="0.3419%" height="15" fill="rgb(233,25,53)" fg:x="412" fg:w="2"/><text x="70.6774%" y="527.50"></text></g><g><title>suballoc.exe`std::panicking::rust_panic (2 samples, 0.34%)</title><rect x="70.4274%" y="501" width="0.3419%" height="15" fill="rgb(210,40,34)" fg:x="412" fg:w="2"/><text x="70.6774%" y="511.50"></text></g><g><title>suballoc.exe`panic_unwind::__rust_start_panic (2 samples, 0.34%)</title><rect x="70.4274%" y="485" width="0.3419%" height="15" fill="rgb(241,220,44)" fg:x="412" fg:w="2"/><text x="70.6774%" y="495.50"></text></g><g><title>suballoc.exe`panic_unwind::imp::panic (2 samples, 0.34%)</title><rect x="70.4274%" y="469" width="0.3419%" height="15" fill="rgb(235,28,35)" fg:x="412" fg:w="2"/><text x="70.6774%" y="479.50"></text></g><g><title>`0x7FF961E95267 (2 samples, 0.34%)</title><rect x="70.4274%" y="453" width="0.3419%" height="15" fill="rgb(210,56,17)" fg:x="412" fg:w="2"/><text x="70.6774%" y="463.50"></text></g><g><title>`0x7FF97C055369 (2 samples, 0.34%)</title><rect x="70.4274%" y="437" width="0.3419%" height="15" fill="rgb(224,130,29)" fg:x="412" fg:w="2"/><text x="70.6774%" y="447.50"></text></g><g><title>`0x7FF97E7822A7 (2 samples, 0.34%)</title><rect x="70.4274%" y="421" width="0.3419%" height="15" fill="rgb(235,212,8)" fg:x="412" fg:w="2"/><text x="70.6774%" y="431.50"></text></g><g><title>`0x7FF97E782554 (2 samples, 0.34%)</title><rect x="70.4274%" y="405" width="0.3419%" height="15" fill="rgb(223,33,50)" fg:x="412" fg:w="2"/><text x="70.6774%" y="415.50"></text></g><g><title>`0x7FF97E7D28BF (2 samples, 0.34%)</title><rect x="70.4274%" y="389" width="0.3419%" height="15" fill="rgb(219,149,13)" fg:x="412" fg:w="2"/><text x="70.6774%" y="399.50"></text></g><g><title>`0x7FF961E9F541 (2 samples, 0.34%)</title><rect x="70.4274%" y="373" width="0.3419%" height="15" fill="rgb(250,156,29)" fg:x="412" fg:w="2"/><text x="70.6774%" y="383.50"></text></g><g><title>`0x7FF961E92D90 (2 samples, 0.34%)</title><rect x="70.4274%" y="357" width="0.3419%" height="15" fill="rgb(216,193,19)" fg:x="412" fg:w="2"/><text x="70.6774%" y="367.50"></text></g><g><title>`0x7FF961E91D00 (2 samples, 0.34%)</title><rect x="70.4274%" y="341" width="0.3419%" height="15" fill="rgb(216,135,14)" fg:x="412" fg:w="2"/><text x="70.6774%" y="351.50"></text></g><g><title>`0x7FF961E918E5 (2 samples, 0.34%)</title><rect x="70.4274%" y="325" width="0.3419%" height="15" fill="rgb(241,47,5)" fg:x="412" fg:w="2"/><text x="70.6774%" y="335.50"></text></g><g><title>`0x7FF961E9F0CA (2 samples, 0.34%)</title><rect x="70.4274%" y="309" width="0.3419%" height="15" fill="rgb(233,42,35)" fg:x="412" fg:w="2"/><text x="70.6774%" y="319.50"></text></g><g><title>`0x7FF97E760939 (2 samples, 0.34%)</title><rect x="70.4274%" y="293" width="0.3419%" height="15" fill="rgb(231,13,6)" fg:x="412" fg:w="2"/><text x="70.6774%" y="303.50"></text></g><g><title>`0x7FF97E7D293F (2 samples, 0.34%)</title><rect x="70.4274%" y="277" width="0.3419%" height="15" fill="rgb(207,181,40)" fg:x="412" fg:w="2"/><text x="70.6774%" y="287.50"></text></g><g><title>`0x7FF961E9F541 (2 samples, 0.34%)</title><rect x="70.4274%" y="261" width="0.3419%" height="15" fill="rgb(254,173,49)" fg:x="412" fg:w="2"/><text x="70.6774%" y="271.50"></text></g><g><title>`0x7FF961E92C94 (2 samples, 0.34%)</title><rect x="70.4274%" y="245" width="0.3419%" height="15" fill="rgb(221,1,38)" fg:x="412" fg:w="2"/><text x="70.6774%" y="255.50"></text></g><g><title>`0x7FF961E9EC04 (2 samples, 0.34%)</title><rect x="70.4274%" y="229" width="0.3419%" height="15" fill="rgb(206,124,46)" fg:x="412" fg:w="2"/><text x="70.6774%" y="239.50"></text></g><g><title>`0x7FF961E93A86 (2 samples, 0.34%)</title><rect x="70.4274%" y="213" width="0.3419%" height="15" fill="rgb(249,21,11)" fg:x="412" fg:w="2"/><text x="70.6774%" y="223.50"></text></g><g><title>`0x7FF961E9F730 (2 samples, 0.34%)</title><rect x="70.4274%" y="197" width="0.3419%" height="15" fill="rgb(222,201,40)" fg:x="412" fg:w="2"/><text x="70.6774%" y="207.50"></text></g><g><title>suballoc.exe`suballoc::main (2 samples, 0.34%)</title><rect x="70.4274%" y="181" width="0.3419%" height="15" fill="rgb(235,61,29)" fg:x="412" fg:w="2"/><text x="70.6774%" y="191.50"></text></g><g><title>suballoc.exe`suballoc::test::test_tlsf (2 samples, 0.34%)</title><rect x="70.4274%" y="165" width="0.3419%" height="15" fill="rgb(219,207,3)" fg:x="412" fg:w="2"/><text x="70.6774%" y="175.50"></text></g><g><title>suballoc.exe`core::ptr::drop_in_place (1 samples, 0.17%)</title><rect x="70.5983%" y="149" width="0.1709%" height="15" fill="rgb(222,56,46)" fg:x="413" fg:w="1"/><text x="70.8483%" y="159.50"></text></g><g><title>suballoc.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;slice2$ (1 samples, 0.17%)</title><rect x="70.5983%" y="133" width="0.1709%" height="15" fill="rgb(239,76,54)" fg:x="413" fg:w="1"/><text x="70.8483%" y="143.50"></text></g><g><title>suballoc.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;slice2$ (1 samples, 0.17%)</title><rect x="70.5983%" y="117" width="0.1709%" height="15" fill="rgb(231,124,27)" fg:x="413" fg:w="1"/><text x="70.8483%" y="127.50"></text></g><g><title>`0x7FF97E7547B1 (1 samples, 0.17%)</title><rect x="70.5983%" y="101" width="0.1709%" height="15" fill="rgb(249,195,6)" fg:x="413" fg:w="1"/><text x="70.8483%" y="111.50"></text></g><g><title>`0x7FF97E755B74 (1 samples, 0.17%)</title><rect x="70.5983%" y="85" width="0.1709%" height="15" fill="rgb(237,174,47)" fg:x="413" fg:w="1"/><text x="70.8483%" y="95.50"></text></g><g><title>`0x7FF97E756F37 (1 samples, 0.17%)</title><rect x="70.5983%" y="69" width="0.1709%" height="15" fill="rgb(206,201,31)" fg:x="413" fg:w="1"/><text x="70.8483%" y="79.50"></text></g><g><title>`0x7FF97E739B1A (1 samples, 0.17%)</title><rect x="70.5983%" y="53" width="0.1709%" height="15" fill="rgb(231,57,52)" fg:x="413" fg:w="1"/><text x="70.8483%" y="63.50"></text></g><g><title>`0x7FF97E7CD8B4 (1 samples, 0.17%)</title><rect x="70.5983%" y="37" width="0.1709%" height="15" fill="rgb(248,177,22)" fg:x="413" fg:w="1"/><text x="70.8483%" y="47.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::mapping_search (3 samples, 0.51%)</title><rect x="71.1111%" y="661" width="0.5128%" height="15" fill="rgb(215,211,37)" fg:x="416" fg:w="3"/><text x="71.3611%" y="671.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::offset_from_block_ptr (2 samples, 0.34%)</title><rect x="71.6239%" y="661" width="0.3419%" height="15" fill="rgb(241,128,51)" fg:x="419" fg:w="2"/><text x="71.8739%" y="671.50"></text></g><g><title>suballoc.exe`core::ptr::const_ptr::impl$0::offset_from (2 samples, 0.34%)</title><rect x="71.6239%" y="645" width="0.3419%" height="15" fill="rgb(227,165,31)" fg:x="419" fg:w="2"/><text x="71.8739%" y="655.50"></text></g><g><title>suballoc.exe`enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (41 samples, 7.01%)</title><rect x="75.8974%" y="645" width="7.0085%" height="15" fill="rgb(228,167,24)" fg:x="444" fg:w="41"/><text x="76.1474%" y="655.50">suballoc...</text></g><g><title>suballoc.exe`enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;::take (13 samples, 2.22%)</title><rect x="82.9060%" y="645" width="2.2222%" height="15" fill="rgb(228,143,12)" fg:x="485" fg:w="13"/><text x="83.1560%" y="655.50">s..</text></g><g><title>suballoc.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (13 samples, 2.22%)</title><rect x="82.9060%" y="629" width="2.2222%" height="15" fill="rgb(249,149,8)" fg:x="485" fg:w="13"/><text x="83.1560%" y="639.50">s..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::popf_free_link (79 samples, 13.50%)</title><rect x="71.9658%" y="661" width="13.5043%" height="15" fill="rgb(243,35,44)" fg:x="421" fg:w="79"/><text x="72.2158%" y="671.50">suballoc.exe`suballo..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::set_bitmap_index_empty (2 samples, 0.34%)</title><rect x="85.1282%" y="645" width="0.3419%" height="15" fill="rgb(246,89,9)" fg:x="498" fg:w="2"/><text x="85.3782%" y="655.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_next_used (1 samples, 0.17%)</title><rect x="85.8120%" y="629" width="0.1709%" height="15" fill="rgb(233,213,13)" fg:x="502" fg:w="1"/><text x="86.0620%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_prev_used (1 samples, 0.17%)</title><rect x="85.9829%" y="629" width="0.1709%" height="15" fill="rgb(233,141,41)" fg:x="503" fg:w="1"/><text x="86.2329%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::head_from_tail (7 samples, 1.20%)</title><rect x="86.1538%" y="629" width="1.1966%" height="15" fill="rgb(239,167,4)" fg:x="504" fg:w="7"/><text x="86.4038%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (7 samples, 1.20%)</title><rect x="86.1538%" y="613" width="1.1966%" height="15" fill="rgb(209,217,16)" fg:x="504" fg:w="7"/><text x="86.4038%" y="623.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::use_entire_block (18 samples, 3.08%)</title><rect x="85.8120%" y="645" width="3.0769%" height="15" fill="rgb(219,88,35)" fg:x="502" fg:w="18"/><text x="86.0620%" y="655.50">sub..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::tail_from_head (9 samples, 1.54%)</title><rect x="87.3504%" y="629" width="1.5385%" height="15" fill="rgb(220,193,23)" fg:x="511" fg:w="9"/><text x="87.6004%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (9 samples, 1.54%)</title><rect x="87.3504%" y="613" width="1.5385%" height="15" fill="rgb(230,90,52)" fg:x="511" fg:w="9"/><text x="87.6004%" y="623.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_next_used (6 samples, 1.03%)</title><rect x="88.8889%" y="629" width="1.0256%" height="15" fill="rgb(252,106,19)" fg:x="520" fg:w="6"/><text x="89.1389%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_used (1 samples, 0.17%)</title><rect x="89.9145%" y="629" width="0.1709%" height="15" fill="rgb(206,74,20)" fg:x="526" fg:w="1"/><text x="90.1645%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::block_is_first (1 samples, 0.17%)</title><rect x="90.0855%" y="629" width="0.1709%" height="15" fill="rgb(230,138,44)" fg:x="527" fg:w="1"/><text x="90.3355%" y="639.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_sub (2 samples, 0.34%)</title><rect x="90.2564%" y="613" width="0.3419%" height="15" fill="rgb(235,182,43)" fg:x="528" fg:w="2"/><text x="90.5064%" y="623.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::sub (2 samples, 0.34%)</title><rect x="90.2564%" y="597" width="0.3419%" height="15" fill="rgb(242,16,51)" fg:x="528" fg:w="2"/><text x="90.5064%" y="607.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::head_from_tail (6 samples, 1.03%)</title><rect x="90.2564%" y="629" width="1.0256%" height="15" fill="rgb(248,9,4)" fg:x="528" fg:w="6"/><text x="90.5064%" y="639.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::size (4 samples, 0.68%)</title><rect x="90.5983%" y="613" width="0.6838%" height="15" fill="rgb(210,31,22)" fg:x="530" fg:w="4"/><text x="90.8483%" y="623.50"></text></g><g><title>suballoc.exe`suballoc::block::BlockInterface::set_next_used (16 samples, 2.74%)</title><rect x="91.2821%" y="613" width="2.7350%" height="15" fill="rgb(239,54,39)" fg:x="534" fg:w="16"/><text x="91.5321%" y="623.50">su..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::part_leftover_block (18 samples, 3.08%)</title><rect x="91.2821%" y="629" width="3.0769%" height="15" fill="rgb(230,99,41)" fg:x="534" fg:w="18"/><text x="91.5321%" y="639.50">sub..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::head_from_tail (2 samples, 0.34%)</title><rect x="94.0171%" y="613" width="0.3419%" height="15" fill="rgb(253,106,12)" fg:x="550" fg:w="2"/><text x="94.2671%" y="623.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::byte_sub (2 samples, 0.34%)</title><rect x="94.0171%" y="597" width="0.3419%" height="15" fill="rgb(213,46,41)" fg:x="550" fg:w="2"/><text x="94.2671%" y="607.50"></text></g><g><title>suballoc.exe`core::ptr::mut_ptr::impl$0::sub (2 samples, 0.34%)</title><rect x="94.0171%" y="581" width="0.3419%" height="15" fill="rgb(215,133,35)" fg:x="550" fg:w="2"/><text x="94.2671%" y="591.50"></text></g><g><title>suballoc.exe`enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;suballoc::block::FreeBlockHead&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (10 samples, 1.71%)</title><rect x="94.7009%" y="613" width="1.7094%" height="15" fill="rgb(213,28,5)" fg:x="554" fg:w="10"/><text x="94.9509%" y="623.50"></text></g><g><title>suballoc.exe`core::num::impl$8::leading_zeros (4 samples, 0.68%)</title><rect x="96.4103%" y="597" width="0.6838%" height="15" fill="rgb(215,77,49)" fg:x="564" fg:w="4"/><text x="96.6603%" y="607.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::mapping_insert (6 samples, 1.03%)</title><rect x="96.4103%" y="613" width="1.0256%" height="15" fill="rgb(248,100,22)" fg:x="564" fg:w="6"/><text x="96.6603%" y="623.50"></text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::calc_sl_index_for_fl (2 samples, 0.34%)</title><rect x="97.0940%" y="597" width="0.3419%" height="15" fill="rgb(208,67,9)" fg:x="568" fg:w="2"/><text x="97.3440%" y="607.50"></text></g><g><title>`0x7FF97E77CC91 (570 samples, 97.44%)</title><rect x="0.1709%" y="805" width="97.4359%" height="15" fill="rgb(219,133,21)" fg:x="1" fg:w="570"/><text x="0.4209%" y="815.50">`0x7FF97E77CC91</text></g><g><title>`0x7FF97C897374 (570 samples, 97.44%)</title><rect x="0.1709%" y="789" width="97.4359%" height="15" fill="rgb(246,46,29)" fg:x="1" fg:w="570"/><text x="0.4209%" y="799.50">`0x7FF97C897374</text></g><g><title>suballoc.exe`__scrt_common_main_seh() (565 samples, 96.58%)</title><rect x="1.0256%" y="773" width="96.5812%" height="15" fill="rgb(246,185,52)" fg:x="6" fg:w="565"/><text x="1.2756%" y="783.50">suballoc.exe`__scrt_common_main_seh()</text></g><g><title>suballoc.exe`invoke_main() (557 samples, 95.21%)</title><rect x="2.3932%" y="757" width="95.2137%" height="15" fill="rgb(252,136,11)" fg:x="14" fg:w="557"/><text x="2.6432%" y="767.50">suballoc.exe`invoke_main()</text></g><g><title>suballoc.exe`main (557 samples, 95.21%)</title><rect x="2.3932%" y="741" width="95.2137%" height="15" fill="rgb(219,138,53)" fg:x="14" fg:w="557"/><text x="2.6432%" y="751.50">suballoc.exe`main</text></g><g><title>suballoc.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (557 samples, 95.21%)</title><rect x="2.3932%" y="725" width="95.2137%" height="15" fill="rgb(211,51,23)" fg:x="14" fg:w="557"/><text x="2.6432%" y="735.50">suballoc.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>suballoc.exe`suballoc::main (557 samples, 95.21%)</title><rect x="2.3932%" y="709" width="95.2137%" height="15" fill="rgb(247,221,28)" fg:x="14" fg:w="557"/><text x="2.6432%" y="719.50">suballoc.exe`suballoc::main</text></g><g><title>suballoc.exe`suballoc::test::test_tlsf (557 samples, 95.21%)</title><rect x="2.3932%" y="693" width="95.2137%" height="15" fill="rgb(251,222,45)" fg:x="14" fg:w="557"/><text x="2.6432%" y="703.50">suballoc.exe`suballoc::test::test_tlsf</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::allocate (157 samples, 26.84%)</title><rect x="70.7692%" y="677" width="26.8376%" height="15" fill="rgb(217,162,53)" fg:x="414" fg:w="157"/><text x="71.0192%" y="687.50">suballoc.exe`suballoc::tlsf::TLSF::allocate</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::use_block (71 samples, 12.14%)</title><rect x="85.4701%" y="661" width="12.1368%" height="15" fill="rgb(229,93,14)" fg:x="500" fg:w="71"/><text x="85.7201%" y="671.50">suballoc.exe`subal..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::use_part_of_block (51 samples, 8.72%)</title><rect x="88.8889%" y="645" width="8.7179%" height="15" fill="rgb(209,67,49)" fg:x="520" fg:w="51"/><text x="89.1389%" y="655.50">suballoc.exe..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::pushf_free_link(core::ptr::non_null::NonNull (19 samples, 3.25%)</title><rect x="94.3590%" y="629" width="3.2479%" height="15" fill="rgb(213,87,29)" fg:x="552" fg:w="19"/><text x="94.6090%" y="639.50">sub..</text></g><g><title>suballoc.exe`suballoc::tlsf::TLSF::set_bitmap_index_available (1 samples, 0.17%)</title><rect x="97.4359%" y="613" width="0.1709%" height="15" fill="rgb(205,151,52)" fg:x="570" fg:w="1"/><text x="97.6859%" y="623.50"></text></g><g><title>`0x7FF97E802723 (1 samples, 0.17%)</title><rect x="97.6068%" y="757" width="0.1709%" height="15" fill="rgb(253,215,39)" fg:x="571" fg:w="1"/><text x="97.8568%" y="767.50"></text></g><g><title>`0x7FF97E80407F (1 samples, 0.17%)</title><rect x="97.6068%" y="741" width="0.1709%" height="15" fill="rgb(221,220,41)" fg:x="571" fg:w="1"/><text x="97.8568%" y="751.50"></text></g><g><title>`0x7FF97E73AC87 (1 samples, 0.17%)</title><rect x="97.6068%" y="725" width="0.1709%" height="15" fill="rgb(218,133,21)" fg:x="571" fg:w="1"/><text x="97.8568%" y="735.50"></text></g><g><title>`0x7FF97E739AF9 (1 samples, 0.17%)</title><rect x="97.6068%" y="709" width="0.1709%" height="15" fill="rgb(221,193,43)" fg:x="571" fg:w="1"/><text x="97.8568%" y="719.50"></text></g><g><title>`0x7FF97E802FF9 (1 samples, 0.17%)</title><rect x="97.7778%" y="757" width="0.1709%" height="15" fill="rgb(240,128,52)" fg:x="572" fg:w="1"/><text x="98.0278%" y="767.50"></text></g><g><title>`0x7FF97E7A9C72 (1 samples, 0.17%)</title><rect x="97.7778%" y="741" width="0.1709%" height="15" fill="rgb(253,114,12)" fg:x="572" fg:w="1"/><text x="98.0278%" y="751.50"></text></g><g><title>`0x7FF97E742263 (1 samples, 0.17%)</title><rect x="97.7778%" y="725" width="0.1709%" height="15" fill="rgb(215,223,47)" fg:x="572" fg:w="1"/><text x="98.0278%" y="735.50"></text></g><g><title>`0x7FF97E744AAA (1 samples, 0.17%)</title><rect x="97.9487%" y="661" width="0.1709%" height="15" fill="rgb(248,225,23)" fg:x="573" fg:w="1"/><text x="98.1987%" y="671.50"></text></g><g><title>`0x7FF97E744D42 (1 samples, 0.17%)</title><rect x="97.9487%" y="645" width="0.1709%" height="15" fill="rgb(250,108,0)" fg:x="573" fg:w="1"/><text x="98.1987%" y="655.50"></text></g><g><title>`0x7FF97E7CD9F4 (1 samples, 0.17%)</title><rect x="97.9487%" y="629" width="0.1709%" height="15" fill="rgb(228,208,7)" fg:x="573" fg:w="1"/><text x="98.1987%" y="639.50"></text></g><g><title>`0x7FF97E747AF0 (1 samples, 0.17%)</title><rect x="98.1197%" y="645" width="0.1709%" height="15" fill="rgb(244,45,10)" fg:x="574" fg:w="1"/><text x="98.3697%" y="655.50"></text></g><g><title>`0x7FF97E74FB31 (3 samples, 0.51%)</title><rect x="97.9487%" y="709" width="0.5128%" height="15" fill="rgb(207,125,25)" fg:x="573" fg:w="3"/><text x="98.1987%" y="719.50"></text></g><g><title>`0x7FF97E79C2ED (3 samples, 0.51%)</title><rect x="97.9487%" y="693" width="0.5128%" height="15" fill="rgb(210,195,18)" fg:x="573" fg:w="3"/><text x="98.1987%" y="703.50"></text></g><g><title>`0x7FF97E744479 (3 samples, 0.51%)</title><rect x="97.9487%" y="677" width="0.5128%" height="15" fill="rgb(249,80,12)" fg:x="573" fg:w="3"/><text x="98.1987%" y="687.50"></text></g><g><title>`0x7FF97E744C14 (2 samples, 0.34%)</title><rect x="98.1197%" y="661" width="0.3419%" height="15" fill="rgb(221,65,9)" fg:x="574" fg:w="2"/><text x="98.3697%" y="671.50"></text></g><g><title>`0x7FF97E747BC4 (1 samples, 0.17%)</title><rect x="98.2906%" y="645" width="0.1709%" height="15" fill="rgb(235,49,36)" fg:x="575" fg:w="1"/><text x="98.5406%" y="655.50"></text></g><g><title>`0x7FF97E7626C6 (1 samples, 0.17%)</title><rect x="98.2906%" y="629" width="0.1709%" height="15" fill="rgb(225,32,20)" fg:x="575" fg:w="1"/><text x="98.5406%" y="639.50"></text></g><g><title>`0x7FF97E74FB5D (1 samples, 0.17%)</title><rect x="98.4615%" y="709" width="0.1709%" height="15" fill="rgb(215,141,46)" fg:x="576" fg:w="1"/><text x="98.7115%" y="719.50"></text></g><g><title>`0x7FF97E790048 (1 samples, 0.17%)</title><rect x="98.4615%" y="693" width="0.1709%" height="15" fill="rgb(250,160,47)" fg:x="576" fg:w="1"/><text x="98.7115%" y="703.50"></text></g><g><title>`0x7FF97E790128 (1 samples, 0.17%)</title><rect x="98.4615%" y="677" width="0.1709%" height="15" fill="rgb(216,222,40)" fg:x="576" fg:w="1"/><text x="98.7115%" y="687.50"></text></g><g><title>`0x7FF97E7626C6 (1 samples, 0.17%)</title><rect x="98.4615%" y="661" width="0.1709%" height="15" fill="rgb(234,217,39)" fg:x="576" fg:w="1"/><text x="98.7115%" y="671.50"></text></g><g><title>`0x7FF97C079577 (1 samples, 0.17%)</title><rect x="98.6325%" y="613" width="0.1709%" height="15" fill="rgb(207,178,40)" fg:x="577" fg:w="1"/><text x="98.8825%" y="623.50"></text></g><g><title>`0x7FF97C0C5D72 (1 samples, 0.17%)</title><rect x="98.6325%" y="597" width="0.1709%" height="15" fill="rgb(221,136,13)" fg:x="577" fg:w="1"/><text x="98.8825%" y="607.50"></text></g><g><title>`0x7FF97C0C50BE (1 samples, 0.17%)</title><rect x="98.6325%" y="581" width="0.1709%" height="15" fill="rgb(249,199,10)" fg:x="577" fg:w="1"/><text x="98.8825%" y="591.50"></text></g><g><title>`0x7FF97C0C352D (1 samples, 0.17%)</title><rect x="98.6325%" y="565" width="0.1709%" height="15" fill="rgb(249,222,13)" fg:x="577" fg:w="1"/><text x="98.8825%" y="575.50"></text></g><g><title>`0x7FF97C0C30AC (1 samples, 0.17%)</title><rect x="98.6325%" y="549" width="0.1709%" height="15" fill="rgb(244,185,38)" fg:x="577" fg:w="1"/><text x="98.8825%" y="559.50"></text></g><g><title>`0x7FF97C0572A8 (1 samples, 0.17%)</title><rect x="98.6325%" y="533" width="0.1709%" height="15" fill="rgb(236,202,9)" fg:x="577" fg:w="1"/><text x="98.8825%" y="543.50"></text></g><g><title>`0x7FF97E7CEB64 (1 samples, 0.17%)</title><rect x="98.6325%" y="517" width="0.1709%" height="15" fill="rgb(250,229,37)" fg:x="577" fg:w="1"/><text x="98.8825%" y="527.50"></text></g><g><title>`0x7FF97E8037CE (6 samples, 1.03%)</title><rect x="97.9487%" y="757" width="1.0256%" height="15" fill="rgb(206,174,23)" fg:x="573" fg:w="6"/><text x="98.1987%" y="767.50"></text></g><g><title>`0x7FF97E746AF4 (6 samples, 1.03%)</title><rect x="97.9487%" y="741" width="1.0256%" height="15" fill="rgb(211,33,43)" fg:x="573" fg:w="6"/><text x="98.1987%" y="751.50"></text></g><g><title>`0x7FF97E7473E4 (6 samples, 1.03%)</title><rect x="97.9487%" y="725" width="1.0256%" height="15" fill="rgb(245,58,50)" fg:x="573" fg:w="6"/><text x="98.1987%" y="735.50"></text></g><g><title>`0x7FF97E74FBAE (2 samples, 0.34%)</title><rect x="98.6325%" y="709" width="0.3419%" height="15" fill="rgb(244,68,36)" fg:x="577" fg:w="2"/><text x="98.8825%" y="719.50"></text></g><g><title>`0x7FF97E76D947 (2 samples, 0.34%)</title><rect x="98.6325%" y="693" width="0.3419%" height="15" fill="rgb(232,229,15)" fg:x="577" fg:w="2"/><text x="98.8825%" y="703.50"></text></g><g><title>`0x7FF97E79D110 (2 samples, 0.34%)</title><rect x="98.6325%" y="677" width="0.3419%" height="15" fill="rgb(254,30,23)" fg:x="577" fg:w="2"/><text x="98.8825%" y="687.50"></text></g><g><title>`0x7FF97E79D08A (2 samples, 0.34%)</title><rect x="98.6325%" y="661" width="0.3419%" height="15" fill="rgb(235,160,14)" fg:x="577" fg:w="2"/><text x="98.8825%" y="671.50"></text></g><g><title>`0x7FF97E79D2F7 (2 samples, 0.34%)</title><rect x="98.6325%" y="645" width="0.3419%" height="15" fill="rgb(212,155,44)" fg:x="577" fg:w="2"/><text x="98.8825%" y="655.50"></text></g><g><title>`0x7FF97E749A1D (2 samples, 0.34%)</title><rect x="98.6325%" y="629" width="0.3419%" height="15" fill="rgb(226,2,50)" fg:x="577" fg:w="2"/><text x="98.8825%" y="639.50"></text></g><g><title>`0x7FF97C07957E (1 samples, 0.17%)</title><rect x="98.8034%" y="613" width="0.1709%" height="15" fill="rgb(234,177,6)" fg:x="578" fg:w="1"/><text x="99.0534%" y="623.50"></text></g><g><title>`0x7FF97C0C6567 (1 samples, 0.17%)</title><rect x="98.8034%" y="597" width="0.1709%" height="15" fill="rgb(217,24,9)" fg:x="578" fg:w="1"/><text x="99.0534%" y="607.50"></text></g><g><title>`0x7FF97C0E2DD5 (1 samples, 0.17%)</title><rect x="98.8034%" y="581" width="0.1709%" height="15" fill="rgb(220,13,46)" fg:x="578" fg:w="1"/><text x="99.0534%" y="591.50"></text></g><g><title>`0x7FF97C0C8B3C (1 samples, 0.17%)</title><rect x="98.8034%" y="565" width="0.1709%" height="15" fill="rgb(239,221,27)" fg:x="578" fg:w="1"/><text x="99.0534%" y="575.50"></text></g><g><title>`0x7FF97E80389D (1 samples, 0.17%)</title><rect x="98.9744%" y="757" width="0.1709%" height="15" fill="rgb(222,198,25)" fg:x="579" fg:w="1"/><text x="99.2244%" y="767.50"></text></g><g><title>`0x7FF97E7470A6 (1 samples, 0.17%)</title><rect x="98.9744%" y="741" width="0.1709%" height="15" fill="rgb(211,99,13)" fg:x="579" fg:w="1"/><text x="99.2244%" y="751.50"></text></g><g><title>`0x7FF97E7401FD (1 samples, 0.17%)</title><rect x="98.9744%" y="725" width="0.1709%" height="15" fill="rgb(232,111,31)" fg:x="579" fg:w="1"/><text x="99.2244%" y="735.50"></text></g><g><title>`0x7FF97E740446 (1 samples, 0.17%)</title><rect x="98.9744%" y="709" width="0.1709%" height="15" fill="rgb(245,82,37)" fg:x="579" fg:w="1"/><text x="99.2244%" y="719.50"></text></g><g><title>`0x7FF97E761D54 (1 samples, 0.17%)</title><rect x="98.9744%" y="693" width="0.1709%" height="15" fill="rgb(227,149,46)" fg:x="579" fg:w="1"/><text x="99.2244%" y="703.50"></text></g><g><title>`0x7FF97E803B6D (2 samples, 0.34%)</title><rect x="99.1453%" y="757" width="0.3419%" height="15" fill="rgb(218,36,50)" fg:x="580" fg:w="2"/><text x="99.3953%" y="767.50"></text></g><g><title>`0x7FF97E747B29 (2 samples, 0.34%)</title><rect x="99.1453%" y="741" width="0.3419%" height="15" fill="rgb(226,80,48)" fg:x="580" fg:w="2"/><text x="99.3953%" y="751.50"></text></g><g><title>`0x7FF97E7488A8 (2 samples, 0.34%)</title><rect x="99.1453%" y="725" width="0.3419%" height="15" fill="rgb(238,224,15)" fg:x="580" fg:w="2"/><text x="99.3953%" y="735.50"></text></g><g><title>`0x7FF97E744479 (2 samples, 0.34%)</title><rect x="99.1453%" y="709" width="0.3419%" height="15" fill="rgb(241,136,10)" fg:x="580" fg:w="2"/><text x="99.3953%" y="719.50"></text></g><g><title>`0x7FF97E744AAA (2 samples, 0.34%)</title><rect x="99.1453%" y="693" width="0.3419%" height="15" fill="rgb(208,32,45)" fg:x="580" fg:w="2"/><text x="99.3953%" y="703.50"></text></g><g><title>`0x7FF97E744D42 (2 samples, 0.34%)</title><rect x="99.1453%" y="677" width="0.3419%" height="15" fill="rgb(207,135,9)" fg:x="580" fg:w="2"/><text x="99.3953%" y="687.50"></text></g><g><title>`0x7FF97E7CD9F4 (2 samples, 0.34%)</title><rect x="99.1453%" y="661" width="0.3419%" height="15" fill="rgb(206,86,44)" fg:x="580" fg:w="2"/><text x="99.3953%" y="671.50"></text></g><g><title>`0x7FF97E79D08A (1 samples, 0.17%)</title><rect x="99.4872%" y="725" width="0.1709%" height="15" fill="rgb(245,177,15)" fg:x="582" fg:w="1"/><text x="99.7372%" y="735.50"></text></g><g><title>`0x7FF97E79D2F7 (1 samples, 0.17%)</title><rect x="99.4872%" y="709" width="0.1709%" height="15" fill="rgb(206,64,50)" fg:x="582" fg:w="1"/><text x="99.7372%" y="719.50"></text></g><g><title>`0x7FF97E749A1D (1 samples, 0.17%)</title><rect x="99.4872%" y="693" width="0.1709%" height="15" fill="rgb(234,36,40)" fg:x="582" fg:w="1"/><text x="99.7372%" y="703.50"></text></g><g><title>`0x7FF97BF38BDB (1 samples, 0.17%)</title><rect x="99.4872%" y="677" width="0.1709%" height="15" fill="rgb(213,64,8)" fg:x="582" fg:w="1"/><text x="99.7372%" y="687.50"></text></g><g><title>`0x7FF97BF1EDB7 (1 samples, 0.17%)</title><rect x="99.4872%" y="661" width="0.1709%" height="15" fill="rgb(210,75,36)" fg:x="582" fg:w="1"/><text x="99.7372%" y="671.50"></text></g><g><title>`0x7FF97BF1EE5D (1 samples, 0.17%)</title><rect x="99.4872%" y="645" width="0.1709%" height="15" fill="rgb(229,88,21)" fg:x="582" fg:w="1"/><text x="99.7372%" y="655.50"></text></g><g><title>`0x7FF97E7A5C73 (13 samples, 2.22%)</title><rect x="97.6068%" y="789" width="2.2222%" height="15" fill="rgb(252,204,47)" fg:x="571" fg:w="13"/><text x="97.8568%" y="799.50">`..</text></g><g><title>`0x7FF97E7A5DEB (13 samples, 2.22%)</title><rect x="97.6068%" y="773" width="2.2222%" height="15" fill="rgb(208,77,27)" fg:x="571" fg:w="13"/><text x="97.8568%" y="783.50">`..</text></g><g><title>`0x7FF97E803CB2 (2 samples, 0.34%)</title><rect x="99.4872%" y="757" width="0.3419%" height="15" fill="rgb(221,76,26)" fg:x="582" fg:w="2"/><text x="99.7372%" y="767.50"></text></g><g><title>`0x7FF97E79D110 (2 samples, 0.34%)</title><rect x="99.4872%" y="741" width="0.3419%" height="15" fill="rgb(225,139,18)" fg:x="582" fg:w="2"/><text x="99.7372%" y="751.50"></text></g><g><title>`0x7FF97E79D110 (1 samples, 0.17%)</title><rect x="99.6581%" y="725" width="0.1709%" height="15" fill="rgb(230,137,11)" fg:x="583" fg:w="1"/><text x="99.9081%" y="735.50"></text></g><g><title>`0x7FF97E79D08A (1 samples, 0.17%)</title><rect x="99.6581%" y="709" width="0.1709%" height="15" fill="rgb(212,28,1)" fg:x="583" fg:w="1"/><text x="99.9081%" y="719.50"></text></g><g><title>`0x7FF97E79D2F7 (1 samples, 0.17%)</title><rect x="99.6581%" y="693" width="0.1709%" height="15" fill="rgb(248,164,17)" fg:x="583" fg:w="1"/><text x="99.9081%" y="703.50"></text></g><g><title>`0x7FF97E749A1D (1 samples, 0.17%)</title><rect x="99.6581%" y="677" width="0.1709%" height="15" fill="rgb(222,171,42)" fg:x="583" fg:w="1"/><text x="99.9081%" y="687.50"></text></g><g><title>`0x7FF97BDE6216 (1 samples, 0.17%)</title><rect x="99.6581%" y="661" width="0.1709%" height="15" fill="rgb(243,84,45)" fg:x="583" fg:w="1"/><text x="99.9081%" y="671.50"></text></g><g><title>`0x7FF97BDE7730 (1 samples, 0.17%)</title><rect x="99.6581%" y="645" width="0.1709%" height="15" fill="rgb(252,49,23)" fg:x="583" fg:w="1"/><text x="99.9081%" y="655.50"></text></g><g><title>`0x7FF97BDE70BE (1 samples, 0.17%)</title><rect x="99.6581%" y="629" width="0.1709%" height="15" fill="rgb(215,19,7)" fg:x="583" fg:w="1"/><text x="99.9081%" y="639.50"></text></g><g><title>`0x7FF97BDDF040 (1 samples, 0.17%)</title><rect x="99.6581%" y="613" width="0.1709%" height="15" fill="rgb(238,81,41)" fg:x="583" fg:w="1"/><text x="99.9081%" y="623.50"></text></g><g><title>all (585 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(210,199,37)" fg:x="0" fg:w="585"/><text x="0.2500%" y="831.50"></text></g><g><title>`0x7FF97E7A5C1E (14 samples, 2.39%)</title><rect x="97.6068%" y="805" width="2.3932%" height="15" fill="rgb(244,192,49)" fg:x="571" fg:w="14"/><text x="97.8568%" y="815.50">`0..</text></g><g><title>`0x7FF97E7A5C84 (1 samples, 0.17%)</title><rect x="99.8291%" y="789" width="0.1709%" height="15" fill="rgb(226,211,11)" fg:x="584" fg:w="1"/><text x="100.0791%" y="799.50"></text></g><g><title>`0x7FF97E8003E1 (1 samples, 0.17%)</title><rect x="99.8291%" y="773" width="0.1709%" height="15" fill="rgb(236,162,54)" fg:x="584" fg:w="1"/><text x="100.0791%" y="783.50"></text></g><g><title>`0x7FF97E74083A (1 samples, 0.17%)</title><rect x="99.8291%" y="757" width="0.1709%" height="15" fill="rgb(220,229,9)" fg:x="584" fg:w="1"/><text x="100.0791%" y="767.50"></text></g><g><title>`0x7FF97E740877 (1 samples, 0.17%)</title><rect x="99.8291%" y="741" width="0.1709%" height="15" fill="rgb(250,87,22)" fg:x="584" fg:w="1"/><text x="100.0791%" y="751.50"></text></g></svg></svg>